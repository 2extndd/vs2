#!/usr/bin/env python3
"""
–ü–æ–ª–Ω—ã–π —Å—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã Vinted Scanner
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import vinted_scanner
import time
import random
import threading
from concurrent.futures import ThreadPoolExecutor

def stress_test_switching():
    """–°—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º"""
    print("üî• –ü–û–õ–ù–´–ô –°–¢–†–ï–°–°-–¢–ï–°–¢ –°–ò–°–¢–ï–ú–´")
    print("=" * 60)
    
    # –û—Ç–∫–ª—é—á–∞–µ–º Telegram –±–æ—Ç–∞
    vinted_scanner.bot_running = False
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    vinted_scanner.current_system = "basic"
    vinted_scanner.basic_system_errors = 0
    vinted_scanner.advanced_no_proxy_errors = 0
    vinted_scanner.advanced_proxy_errors = 0
    vinted_scanner.basic_requests = 0
    vinted_scanner.basic_success = 0
    vinted_scanner.advanced_no_proxy_requests = 0
    vinted_scanner.advanced_no_proxy_success = 0
    vinted_scanner.advanced_proxy_requests = 0
    vinted_scanner.advanced_proxy_success = 0
    vinted_scanner.last_switch_time = 0
    
    print(f"üéØ –ù–∞—á–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: {vinted_scanner.current_system}")
    
    # –°—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç: 100 –∏—Ç–µ—Ä–∞—Ü–∏–π —Å —Å–ª—É—á–∞–π–Ω—ã–º–∏ –æ—à–∏–±–∫–∞–º–∏
    iterations = 100
    switches_count = 0
    error_patterns = []
    
    for i in range(iterations):
        # –°–ª—É—á–∞–π–Ω—ã–µ –æ—à–∏–±–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
        if vinted_scanner.current_system == "basic":
            if random.random() < 0.3:  # 30% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—à–∏–±–∫–∏
                vinted_scanner.basic_system_errors += 1
                error_patterns.append(f"basic_error_{i}")
        elif vinted_scanner.current_system == "advanced_no_proxy":
            if random.random() < 0.25:  # 25% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—à–∏–±–∫–∏
                vinted_scanner.advanced_no_proxy_errors += 1
                error_patterns.append(f"no_proxy_error_{i}")
        elif vinted_scanner.current_system == "advanced_proxy":
            if random.random() < 0.2:  # 20% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—à–∏–±–∫–∏
                vinted_scanner.advanced_proxy_errors += 1
                error_patterns.append(f"proxy_error_{i}")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
        if vinted_scanner.current_system == "basic":
            vinted_scanner.basic_requests += 1
            if random.random() < 0.7:  # 70% —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
                vinted_scanner.basic_success += 1
        elif vinted_scanner.current_system == "advanced_no_proxy":
            vinted_scanner.advanced_no_proxy_requests += 1
            if random.random() < 0.8:  # 80% —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
                vinted_scanner.advanced_no_proxy_success += 1
        elif vinted_scanner.current_system == "advanced_proxy":
            vinted_scanner.advanced_proxy_requests += 1
            if random.random() < 0.85:  # 85% —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
                vinted_scanner.advanced_proxy_success += 1
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ
        old_system = vinted_scanner.current_system
        if vinted_scanner.should_switch_system():
            switches_count += 1
            print(f"üîÑ –ò—Ç–µ—Ä–∞—Ü–∏—è {i+1}: {old_system} ‚Üí {vinted_scanner.current_system}")
        
        # –ö–∞–∂–¥—ã–µ 20 –∏—Ç–µ—Ä–∞—Ü–∏–π –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        if (i + 1) % 20 == 0:
            print(f"\nüìä –ò—Ç–µ—Ä–∞—Ü–∏—è {i+1}:")
            print(f"   –°–∏—Å—Ç–µ–º–∞: {vinted_scanner.current_system}")
            print(f"   –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–π: {switches_count}")
            print(f"   –û—à–∏–±–∫–∏: basic={vinted_scanner.basic_system_errors}, no_proxy={vinted_scanner.advanced_no_proxy_errors}, proxy={vinted_scanner.advanced_proxy_errors}")
    
    print(f"\nüéØ –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–¢–†–ï–°–°-–¢–ï–°–¢–ê:")
    print(f"   –í—Å–µ–≥–æ –∏—Ç–µ—Ä–∞—Ü–∏–π: {iterations}")
    print(f"   –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–π: {switches_count}")
    print(f"   –§–∏–Ω–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: {vinted_scanner.current_system}")
    print(f"   –û—à–∏–±–æ–∫: basic={vinted_scanner.basic_system_errors}, no_proxy={vinted_scanner.advanced_no_proxy_errors}, proxy={vinted_scanner.advanced_proxy_errors}")
    print(f"   –£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: basic={vinted_scanner.basic_success}, no_proxy={vinted_scanner.advanced_no_proxy_success}, proxy={vinted_scanner.advanced_proxy_success}")

def stress_test_concurrent():
    """–°—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç —Å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏"""
    print(f"\n‚ö° –°–¢–†–ï–°–°-–¢–ï–°–¢ –ö–û–ù–ö–£–†–ï–ù–¢–ù–´–• –ó–ê–ü–†–û–°–û–í")
    print("=" * 50)
    
    def concurrent_request(thread_id):
        """–°–∏–º—É–ª—è—Ü–∏—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞"""
        for i in range(10):
            # –°–ª—É—á–∞–π–Ω–∞—è –æ—à–∏–±–∫–∞
            if random.random() < 0.1:
                if vinted_scanner.current_system == "basic":
                    vinted_scanner.basic_system_errors += 1
                elif vinted_scanner.current_system == "advanced_no_proxy":
                    vinted_scanner.advanced_no_proxy_errors += 1
                elif vinted_scanner.current_system == "advanced_proxy":
                    vinted_scanner.advanced_proxy_errors += 1
            
            # –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
            if vinted_scanner.current_system == "basic":
                vinted_scanner.basic_requests += 1
                if random.random() < 0.7:
                    vinted_scanner.basic_success += 1
            elif vinted_scanner.current_system == "advanced_no_proxy":
                vinted_scanner.advanced_no_proxy_requests += 1
                if random.random() < 0.8:
                    vinted_scanner.advanced_no_proxy_success += 1
            elif vinted_scanner.current_system == "advanced_proxy":
                vinted_scanner.advanced_proxy_requests += 1
                if random.random() < 0.85:
                    vinted_scanner.advanced_proxy_success += 1
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ
            vinted_scanner.should_switch_system()
            time.sleep(0.01)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º 5 –ø–æ—Ç–æ–∫–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
    with ThreadPoolExecutor(max_workers=5) as executor:
        futures = [executor.submit(concurrent_request, i) for i in range(5)]
        for future in futures:
            future.result()
    
    print(f"‚úÖ –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")
    print(f"   –§–∏–Ω–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: {vinted_scanner.current_system}")
    print(f"   –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {vinted_scanner.basic_requests + vinted_scanner.advanced_no_proxy_requests + vinted_scanner.advanced_proxy_requests}")

def stress_test_rapid_switching():
    """–°—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç –±—ã—Å—Ç—Ä—ã—Ö –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–π"""
    print(f"\nüîÑ –°–¢–†–ï–°–°-–¢–ï–°–¢ –ë–´–°–¢–†–´–• –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ô")
    print("=" * 50)
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    vinted_scanner.current_system = "basic"
    vinted_scanner.basic_system_errors = 0
    vinted_scanner.advanced_no_proxy_errors = 0
    vinted_scanner.advanced_proxy_errors = 0
    
    rapid_switches = 0
    for i in range(50):
        # –ë—ã—Å—Ç—Ä—ã–µ –æ—à–∏–±–∫–∏ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
        if vinted_scanner.current_system == "basic":
            vinted_scanner.basic_system_errors = 3
        elif vinted_scanner.current_system == "advanced_no_proxy":
            vinted_scanner.advanced_no_proxy_errors = 3
        
        old_system = vinted_scanner.current_system
        if vinted_scanner.should_switch_system():
            rapid_switches += 1
            print(f"üîÑ –ë—ã—Å—Ç—Ä–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ {rapid_switches}: {old_system} ‚Üí {vinted_scanner.current_system}")
        
        time.sleep(0.1)  # –ë—ã—Å—Ç—Ä—ã–µ –∏—Ç–µ—Ä–∞—Ü–∏–∏
    
    print(f"‚úÖ –ë—ã—Å—Ç—Ä—ã—Ö –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–π: {rapid_switches}")

def test_y3_thread_id():
    """–¢–µ—Å—Ç thread_id –¥–ª—è y-3 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    print(f"\nüîç –¢–ï–°–¢ THREAD_ID –î–õ–Ø Y-3 –ö–ê–¢–ï–ì–û–†–ò–ò")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Config.py
    import Config
    
    y3_found = False
    for topic_name, topic_data in Config.topics.items():
        if "y-3" in topic_name.lower() or "y3" in topic_name.lower():
            y3_found = True
            thread_id = topic_data.get("thread_id")
            print(f"üìã –ù–∞–π–¥–µ–Ω —Ç–æ–ø–∏–∫: {topic_name}")
            print(f"   Thread ID: {thread_id}")
            print(f"   Query: {topic_data.get('query', 'N/A')}")
            
            if thread_id:
                print(f"‚úÖ Thread ID –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {thread_id}")
            else:
                print(f"‚ùå Thread ID –ù–ï –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
    
    if not y3_found:
        print(f"‚ö†Ô∏è Y-3 –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ Config.py")
        print(f"üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–ø–∏–∫–∏:")
        for topic_name in Config.topics.keys():
            print(f"   - {topic_name}")
    
    return y3_found

if __name__ == "__main__":
    stress_test_switching()
    stress_test_concurrent()
    stress_test_rapid_switching()
    test_y3_thread_id()
    
    print(f"\nüéâ –ü–û–õ–ù–´–ô –°–¢–†–ï–°–°-–¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
    print(f"‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É") 