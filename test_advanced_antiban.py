#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –∞–Ω—Ç–∏–±–∞–Ω —Å–∏—Å—Ç–µ–º—ã
"""

import asyncio
import time
import Config
from antiban import antiban_system, ProxyConfig

async def test_advanced_antiban():
    """–¢–µ—Å—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –∞–Ω—Ç–∏–±–∞–Ω —Å–∏—Å—Ç–µ–º—ã"""
    print("üß™ –¢–µ—Å—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –∞–Ω—Ç–∏–±–∞–Ω —Å–∏—Å—Ç–µ–º—ã")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
    print(f"  –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∞–Ω—Ç–∏–±–∞–Ω: {'‚úÖ' if Config.advanced_antiban_enabled else '‚ùå'}")
    print(f"  –ü—Ä–æ–∫—Å–∏ –≤–∫–ª—é—á–µ–Ω—ã: {'‚úÖ' if Config.proxy_config['enabled'] else '‚ùå'}")
    print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–∫—Å–∏: {len(Config.proxy_config['proxies'])}")
    print(f"  –†–æ—Ç–∞—Ü–∏—è –∫–∞–∂–¥—ã–µ: {Config.proxy_config['rotation_interval']} –∑–∞–ø—Ä–æ—Å–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    print("\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:")
    print(f"  –°–∏—Å—Ç–µ–º–∞ —Å–æ–∑–¥–∞–Ω–∞: {'‚úÖ' if antiban_system else '‚ùå'}")
    print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Å—Å–∏–π: {len(antiban_system.sessions)}")
    print(f"  –¢–µ–∫—É—â–∞—è —Å–µ—Å—Å–∏—è: {antiban_system.current_session_index}")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∫—Å–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    print("\nüåê –¢–µ—Å—Ç 1: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–∫—Å–∏")
    for i, proxy_data in enumerate(Config.proxy_config['proxies']):
        proxy = ProxyConfig(
            host=proxy_data['host'],
            port=proxy_data['port'],
            username=proxy_data['username'],
            password=proxy_data['password'],
            country=proxy_data['country'],
            type=proxy_data['type']
        )
        print(f"  ‚úÖ –ü—Ä–æ–∫—Å–∏ {i+1}: {proxy.host}:{proxy.port} ({proxy.country})")
    
    # –¢–µ—Å—Ç 2: –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
    print("\nüîÑ –¢–µ—Å—Ç 2: –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤")
    test_params = {
        'page': '1',
        'per_page': '2',
        'search_text': 'test',
        'order': 'newest_first'
    }
    
    for i in range(3):
        print(f"  –ó–∞–ø—Ä–æ—Å {i+1}...")
        try:
            result = await antiban_system.get_vinted_items(test_params)
            if result:
                print(f"    ‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ –¥–∞–Ω–Ω—ã—Ö")
            else:
                print(f"    ‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        except Exception as e:
            print(f"    ‚ùå –û—à–∏–±–∫–∞: {str(e)[:50]}")
        
        # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        await asyncio.sleep(2)
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("\nüìä –¢–µ—Å—Ç 3: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    stats = antiban_system.get_stats()
    print(f"  –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {stats['total_requests']}")
    print(f"  –í—Å–µ–≥–æ –æ—à–∏–±–æ–∫: {stats['total_errors']}")
    print(f"  –í—Å–µ–≥–æ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫: {stats['total_blocks']}")
    print(f"  –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {stats['success_rate']:.1f}%")
    print(f"  –¢–µ–∫—É—â–∞—è —Å–µ—Å—Å–∏—è: {stats['current_session']}/{stats['sessions_count']}")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ —Å–µ—Å—Å–∏–π
    print("\nüîÑ –¢–µ—Å—Ç 4: –†–æ—Ç–∞—Ü–∏—è —Å–µ—Å—Å–∏–π")
    old_session = antiban_system.current_session_index
    await antiban_system._rotate_session()
    new_session = antiban_system.current_session_index
    
    if old_session != new_session:
        print(f"  ‚úÖ –†–æ—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: {old_session} -> {new_session}")
    else:
        print(f"  ‚ö†Ô∏è –†–æ—Ç–∞—Ü–∏—è –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞")
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
    print("\n‚ùå –¢–µ—Å—Ç 5: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫")
    try:
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        await antiban_system._handle_error("Test error", 403)
        print(f"  ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ —É—Å–ø–µ—à–Ω–∞")
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {str(e)[:50]}")
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 50)
    print("üìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("=" * 50)
    
    if Config.advanced_antiban_enabled:
        print("‚úÖ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∞–Ω—Ç–∏–±–∞–Ω —Å–∏—Å—Ç–µ–º–∞: –í–ö–õ–Æ–ß–ï–ù–ê")
    else:
        print("‚ùå –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∞–Ω—Ç–∏–±–∞–Ω —Å–∏—Å—Ç–µ–º–∞: –û–¢–ö–õ–Æ–ß–ï–ù–ê")
    
    if antiban_system:
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞: –£–°–ü–ï–®–ù–û")
    else:
        print("‚ùå –°–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞: –û–®–ò–ë–ö–ê")
    
    if len(Config.proxy_config['proxies']) > 0:
        print("‚úÖ –ü—Ä–æ–∫—Å–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã: –ì–û–¢–û–í–û")
    else:
        print("‚ùå –ü—Ä–æ–∫—Å–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã: –ù–ï –ù–ê–°–¢–†–û–ï–ù–´")
    
    print("\nüéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    if not Config.proxy_config['enabled']:
        print("  - –í–∫–ª—é—á–∏—Ç–µ –ø—Ä–æ–∫—Å–∏ –≤ Config.py")
    if len(Config.proxy_config['proxies']) == 0:
        print("  - –î–æ–±–∞–≤—å—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–∫—Å–∏ –≤ Config.py")
    if not Config.advanced_antiban_enabled:
        print("  - –í–∫–ª—é—á–∏—Ç–µ advanced_antiban_enabled = True")
    
    print("\nüöÄ –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:")
    print("  1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements_advanced.txt")
    print("  2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–∫—Å–∏ –≤ Config.py")
    print("  3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python3 vinted_scanner.py")
    
    return True

if __name__ == "__main__":
    asyncio.run(test_advanced_antiban()) 