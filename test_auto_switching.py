#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
"""

import sys
import os
import time
import threading
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import logging
import Config
from vinted_scanner import (
    vinted_antiblock, system_mode, ADVANCED_SYSTEM_AVAILABLE,
    advanced_system_errors, basic_system_errors, max_system_errors
)
from advanced_antiban import get_advanced_system

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def simulate_requests():
    """–°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è"""
    print("\nüöÄ –°–ò–ú–£–õ–Ø–¶–ò–Ø –ó–ê–ü–†–û–°–û–í:")
    print("=" * 40)
    
    if not ADVANCED_SYSTEM_AVAILABLE:
        print("‚ùå –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        return
        
    advanced_system = get_advanced_system()
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
    scenarios = [
        {"name": "–ù–æ—Ä–º–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞", "errors": 0, "duration": 3},
        {"name": "–ù–µ–±–æ–ª—å—à–∏–µ –æ—à–∏–±–∫–∏", "errors": 2, "duration": 3},
        {"name": "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏", "errors": 5, "duration": 3},
        {"name": "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ", "errors": 0, "duration": 3}
    ]
    
    for i, scenario in enumerate(scenarios, 1):
        print(f"\nüìä –°—Ü–µ–Ω–∞—Ä–∏–π {i}: {scenario['name']}")
        print("-" * 30)
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
        global advanced_system_errors
        advanced_system_errors = scenario['errors']
        
        print(f"   –û—à–∏–±–æ–∫ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã: {advanced_system_errors}/{max_system_errors}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º
        if advanced_system_errors >= max_system_errors:
            print("   üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –£–†–û–í–ï–ù–¨ - –æ–∂–∏–¥–∞–µ—Ç—Å—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –±–∞–∑–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É")
        elif advanced_system_errors >= max_system_errors * 0.7:
            print("   ‚ö†Ô∏è –í–´–°–û–ö–ò–ô –£–†–û–í–ï–ù–¨ - –≤–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã")
        else:
            print("   ‚úÖ –ù–û–†–ú–ê–õ–¨–ù–´–ô –£–†–û–í–ï–ù–¨ - —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã
        for j in range(scenario['duration']):
            time.sleep(1)
            print(f"   –í—Ä–µ–º—è: {j+1}/{scenario['duration']}—Å")
        
        print(f"   ‚úÖ –°—Ü–µ–Ω–∞—Ä–∏–π {i} –∑–∞–≤–µ—Ä—à–µ–Ω")

def test_mode_transitions():
    """–¢–µ—Å—Ç –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –º–µ–∂–¥—É —Ä–µ–∂–∏–º–∞–º–∏"""
    print("\nüîÑ –¢–ï–°–¢ –ü–ï–†–ï–•–û–î–û–í –ú–ï–ñ–î–£ –†–ï–ñ–ò–ú–ê–ú–ò:")
    print("=" * 45)
    
    modes = ["auto", "basic", "advanced", "proxy", "noproxy"]
    
    for mode in modes:
        print(f"\nüéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∂–∏–º: {mode}")
        print("-" * 25)
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞
        global system_mode
        old_mode = system_mode
        system_mode = mode
        
        print(f"   –°—Ç–∞—Ä—ã–π —Ä–µ–∂–∏–º: {old_mode}")
        print(f"   –ù–æ–≤—ã–π —Ä–µ–∂–∏–º: {system_mode}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
        if mode in ["auto", "advanced", "proxy", "noproxy"]:
            if ADVANCED_SYSTEM_AVAILABLE:
                print("   ‚úÖ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞")
            else:
                print("   ‚ùå –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        
        if mode == "basic":
            print("   ‚úÖ –ë–∞–∑–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞")
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ä—ã–π —Ä–µ–∂–∏–º
        system_mode = old_mode
        print(f"   üîÑ –í–æ–∑–≤—Ä–∞—Ç –∫ —Ä–µ–∂–∏–º—É: {system_mode}")

def test_proxy_management():
    """–¢–µ—Å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∫—Å–∏"""
    print("\nüì° –¢–ï–°–¢ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–û–ö–°–ò:")
    print("=" * 35)
    
    if not ADVANCED_SYSTEM_AVAILABLE:
        print("‚ùå –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        return
        
    advanced_system = get_advanced_system()
    
    # –¢–µ—Å—Ç 1: –í–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–∫—Å–∏
    print("\n1Ô∏è‚É£ –í–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–∫—Å–∏:")
    advanced_system.enable_proxies()
    if advanced_system.current_proxy:
        print(f"   ‚úÖ –ü—Ä–æ–∫—Å–∏ –≤–∫–ª—é—á–µ–Ω: {advanced_system.current_proxy['host']}:{advanced_system.current_proxy['port']}")
    else:
        print("   ‚ùå –ü—Ä–æ–∫—Å–∏ –Ω–µ –≤–∫–ª—é—á–∏–ª—Å—è")
    
    # –¢–µ—Å—Ç 2: –†–æ—Ç–∞—Ü–∏—è –ø—Ä–æ–∫—Å–∏
    print("\n2Ô∏è‚É£ –†–æ—Ç–∞—Ü–∏—è –ø—Ä–æ–∫—Å–∏:")
    old_proxy = advanced_system.current_proxy
    advanced_system._rotate_proxy()
    new_proxy = advanced_system.current_proxy
    
    if old_proxy != new_proxy:
        print(f"   ‚úÖ –†–æ—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: {new_proxy['host']}:{new_proxy['port']}")
    else:
        print("   ‚ö†Ô∏è –†–æ—Ç–∞—Ü–∏—è –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞")
    
    # –¢–µ—Å—Ç 3: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–∫—Å–∏
    print("\n3Ô∏è‚É£ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–∫—Å–∏:")
    advanced_system.disable_proxies()
    if advanced_system.current_proxy is None:
        print("   ‚úÖ –ü—Ä–æ–∫—Å–∏ –æ—Ç–∫–ª—é—á–µ–Ω")
    else:
        print("   ‚ùå –ü—Ä–æ–∫—Å–∏ –Ω–µ –æ—Ç–∫–ª—é—á–∏–ª—Å—è")

def test_error_recovery():
    """–¢–µ—Å—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ—à–∏–±–æ–∫"""
    print("\nüîÑ –¢–ï–°–¢ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø –ü–û–°–õ–ï –û–®–ò–ë–û–ö:")
    print("=" * 45)
    
    if not ADVANCED_SYSTEM_AVAILABLE:
        print("‚ùå –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        return
        
    advanced_system = get_advanced_system()
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –≤ –ø—Ä–æ–∫—Å–∏
    print("\nüö® –°–∏–º—É–ª—è—Ü–∏—è –æ—à–∏–±–æ–∫ –≤ –ø—Ä–æ–∫—Å–∏:")
    for i, proxy in enumerate(advanced_system.proxies):
        proxy['errors'] = i  # –†–∞–∑–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫
        print(f"   –ü—Ä–æ–∫—Å–∏ {proxy['host']}:{proxy['port']} - {proxy['errors']} –æ—à–∏–±–æ–∫")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ—Ç–∞—Ü–∏—é —Å —É—á–µ—Ç–æ–º –æ—à–∏–±–æ–∫
    print("\nüîÑ –†–æ—Ç–∞—Ü–∏—è —Å —É—á–µ—Ç–æ–º –æ—à–∏–±–æ–∫:")
    for i in range(3):
        old_proxy = advanced_system.current_proxy
        advanced_system._rotate_proxy()
        new_proxy = advanced_system.current_proxy
        
        if old_proxy != new_proxy:
            print(f"   –†–æ—Ç–∞—Ü–∏—è {i+1}: {new_proxy['host']}:{new_proxy['port']} ({new_proxy['errors']} –æ—à–∏–±–æ–∫)")
        else:
            print(f"   –†–æ—Ç–∞—Ü–∏—è {i+1}: –¢–æ—Ç –∂–µ –ø—Ä–æ–∫—Å–∏")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
    for proxy in advanced_system.proxies:
        proxy['errors'] = 0
    print("\n‚úÖ –û—à–∏–±–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–Ø")
    print("=" * 55)
    
    try:
        test_mode_transitions()
        test_proxy_management()
        test_error_recovery()
        simulate_requests()
        
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–Ø –ü–†–û–ô–î–ï–ù–´!")
        print("=" * 55)
        
        print("\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"   ‚Ä¢ –†–µ–∂–∏–º —Å–∏—Å—Ç–µ–º—ã: {system_mode}")
        print(f"   ‚Ä¢ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞: {'‚úÖ –î–æ—Å—Ç—É–ø–Ω–∞' if ADVANCED_SYSTEM_AVAILABLE else '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞'}")
        print(f"   ‚Ä¢ –û—à–∏–±–æ–∫ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π: {advanced_system_errors}/{max_system_errors}")
        print(f"   ‚Ä¢ –û—à–∏–±–æ–∫ –±–∞–∑–æ–≤–æ–π: {basic_system_errors}/{max_system_errors}")
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –í –¢–ï–°–¢–ê–•: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main() 