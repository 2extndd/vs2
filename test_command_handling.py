#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
"""

import sys
import os
import time
import asyncio
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import vinted_scanner
import Config

def test_command_handling():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–º–∞–Ω–¥"""
    print("üîç –¢–ï–°–¢ –û–ë–†–ê–ë–û–¢–ö–ò –ö–û–ú–ê–ù–î")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥
    print("üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
    
    # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –∏–∑ setup_bot
    registered_commands = [
        "status", "log", "restart", "fast", "slow", "recovery", 
        "traffic", "system", "redeploy", "topics", "proxy", 
        "threadid", "detect"
    ]
    
    for cmd in registered_commands:
        print(f"   ‚úÖ /{cmd} - –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞")
    
    print(f"\nüìä –í—Å–µ–≥–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –∫–æ–º–∞–Ω–¥: {len(registered_commands)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤:")
    
    handlers = {
        "status": vinted_scanner.status_command,
        "log": vinted_scanner.log_command,
        "restart": vinted_scanner.restart_command,
        "fast": vinted_scanner.fast_command,
        "slow": vinted_scanner.slow_command,
        "reset": vinted_scanner.reset_command,
        "proxy": vinted_scanner.proxy_command,
        "system": vinted_scanner.system_command,
        "recovery": vinted_scanner.recovery_command,
        "traffic": vinted_scanner.traffic_command,
        "topics": vinted_scanner.topics_command,
        "threadid": vinted_scanner.threadid_command,
        "detect": vinted_scanner.detect_threadid_command
    }
    
    for cmd, handler in handlers.items():
        if handler:
            print(f"   ‚úÖ {cmd}_command - —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print(f"   ‚ùå {cmd}_command - –ù–ï –ù–ê–ô–î–ï–ù–ê")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    print(f"\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:")
    
    globals_to_check = [
        ("scan_mode", "–†–µ–∂–∏–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"),
        ("system_mode", "–†–µ–∂–∏–º —Å–∏—Å—Ç–µ–º—ã"),
        ("current_system", "–¢–µ–∫—É—â–∞—è —Å–∏—Å—Ç–µ–º–∞"),
        ("bot_running", "–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞"),
        ("basic_system_errors", "–û—à–∏–±–∫–∏ –±–∞–∑–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"),
        ("advanced_no_proxy_errors", "–û—à–∏–±–∫–∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –±–µ–∑ –ø—Ä–æ–∫—Å–∏"),
        ("advanced_proxy_errors", "–û—à–∏–±–∫–∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π —Å –ø—Ä–æ–∫—Å–∏")
    ]
    
    for var_name, description in globals_to_check:
        if hasattr(vinted_scanner, var_name):
            value = getattr(vinted_scanner, var_name)
            print(f"   ‚úÖ {var_name}: {value} ({description})")
        else:
            print(f"   ‚ùå {var_name} - –ù–ï –ù–ê–ô–î–ï–ù–ê")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤
    print(f"\nüîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤:")
    
    # –¢–µ—Å—Ç 1: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ scan_mode
    print(f"   üìä –ò—Å—Ö–æ–¥–Ω—ã–π scan_mode: {vinted_scanner.scan_mode}")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /fast
    original_scan_mode = vinted_scanner.scan_mode
    vinted_scanner.scan_mode = "fast"
    print(f"   ‚úÖ –ü–æ—Å–ª–µ /fast: {vinted_scanner.scan_mode}")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /slow
    vinted_scanner.scan_mode = "slow"
    print(f"   ‚úÖ –ü–æ—Å–ª–µ /slow: {vinted_scanner.scan_mode}")
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
    vinted_scanner.scan_mode = original_scan_mode
    
    # –¢–µ—Å—Ç 2: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ system_mode
    print(f"   üìä –ò—Å—Ö–æ–¥–Ω—ã–π system_mode: {vinted_scanner.system_mode}")
    
    test_modes = ["auto", "basic", "advanced", "proxy", "noproxy"]
    for mode in test_modes:
        vinted_scanner.system_mode = mode
        print(f"   ‚úÖ –ü–æ—Å–ª–µ /system {mode}: {vinted_scanner.system_mode}")
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
    vinted_scanner.system_mode = "auto"
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ should_switch_system
    print(f"\nüîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º should_switch_system:")
    
    original_system = vinted_scanner.current_system
    original_errors = vinted_scanner.basic_system_errors
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
    vinted_scanner.current_system = "basic"
    vinted_scanner.basic_system_errors = 3
    vinted_scanner.last_switch_time = time.time()
    
    result = vinted_scanner.should_switch_system()
    print(f"   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è: {result}")
    print(f"   üìä –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞: {vinted_scanner.current_system}")
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
    vinted_scanner.current_system = original_system
    vinted_scanner.basic_system_errors = original_errors
    
    print(f"\n‚úÖ –¢–ï–°–¢ –û–ë–†–ê–ë–û–¢–ö–ò –ö–û–ú–ê–ù–î –ó–ê–í–ï–†–®–ï–ù")

def test_telegram_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Telegram"""
    print(f"\nüì± –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° TELEGRAM")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
    print(f"üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram:")
    print(f"   ‚úÖ Bot Token: {'–ù–∞—Å—Ç—Ä–æ–µ–Ω' if Config.telegram_bot_token else '–ù–ï –ù–ê–°–¢–†–û–ï–ù'}")
    print(f"   ‚úÖ Chat ID: {'–ù–∞—Å—Ç—Ä–æ–µ–Ω' if Config.telegram_chat_id else '–ù–ï –ù–ê–°–¢–†–û–ï–ù'}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º TelegramAntiBlock
    if hasattr(vinted_scanner, 'telegram_antiblock'):
        tg = vinted_scanner.telegram_antiblock
        print(f"   ‚úÖ TelegramAntiBlock: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        print(f"   üìä consecutive_errors: {tg.consecutive_errors}")
        print(f"   üìä error_backoff: {tg.error_backoff}")
    else:
        print(f"   ‚ùå TelegramAntiBlock: –ù–ï –ù–ê–ô–î–ï–ù")
    
    print(f"\n‚úÖ –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° TELEGRAM –ó–ê–í–ï–†–®–ï–ù")

def test_system_switching_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º"""
    print(f"\nüîÑ –¢–ï–°–¢ –õ–û–ì–ò–ö–ò –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–Ø –°–ò–°–¢–ï–ú")
    print("=" * 60)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    original_system = vinted_scanner.current_system
    original_system_mode = vinted_scanner.system_mode
    original_basic_errors = vinted_scanner.basic_system_errors
    original_advanced_no_proxy_errors = vinted_scanner.advanced_no_proxy_errors
    original_advanced_proxy_errors = vinted_scanner.advanced_proxy_errors
    
    print(f"üìä –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
    print(f"   current_system: {vinted_scanner.current_system}")
    print(f"   system_mode: {vinted_scanner.system_mode}")
    print(f"   basic_system_errors: {vinted_scanner.basic_system_errors}")
    print(f"   advanced_no_proxy_errors: {vinted_scanner.advanced_no_proxy_errors}")
    print(f"   advanced_proxy_errors: {vinted_scanner.advanced_proxy_errors}")
    
    # –¢–µ—Å—Ç 1: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ –æ—à–∏–±–∫–∞–º
    print(f"\nüîÑ –¢–µ—Å—Ç 1: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ –æ—à–∏–±–∫–∞–º")
    
    vinted_scanner.current_system = "basic"
    vinted_scanner.basic_system_errors = 3
    vinted_scanner.last_switch_time = time.time()
    
    result = vinted_scanner.should_switch_system()
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    print(f"   –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞: {vinted_scanner.current_system}")
    
    # –¢–µ—Å—Ç 2: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    print(f"\nüîÑ –¢–µ—Å—Ç 2: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏")
    
    vinted_scanner.current_system = "basic"
    vinted_scanner.basic_system_errors = 0
    vinted_scanner.last_switch_time = time.time() - 301  # 5 –º–∏–Ω—É—Ç + 1 —Å–µ–∫—É–Ω–¥–∞
    
    result = vinted_scanner.should_switch_system()
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    print(f"   –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞: {vinted_scanner.current_system}")
    
    # –¢–µ—Å—Ç 3: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –±–µ–∑ –ø—Ä–æ–∫—Å–∏ –Ω–∞ —Å –ø—Ä–æ–∫—Å–∏
    print(f"\nüîÑ –¢–µ—Å—Ç 3: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –±–µ–∑ –ø—Ä–æ–∫—Å–∏ –Ω–∞ —Å –ø—Ä–æ–∫—Å–∏")
    
    vinted_scanner.current_system = "advanced_no_proxy"
    vinted_scanner.advanced_no_proxy_errors = 3
    vinted_scanner.last_switch_time = time.time()
    
    result = vinted_scanner.should_switch_system()
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    print(f"   –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞: {vinted_scanner.current_system}")
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    vinted_scanner.current_system = original_system
    vinted_scanner.system_mode = original_system_mode
    vinted_scanner.basic_system_errors = original_basic_errors
    vinted_scanner.advanced_no_proxy_errors = original_advanced_no_proxy_errors
    vinted_scanner.advanced_proxy_errors = original_advanced_proxy_errors
    
    print(f"\n‚úÖ –¢–ï–°–¢ –õ–û–ì–ò–ö–ò –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–Ø –°–ò–°–¢–ï–ú –ó–ê–í–ï–†–®–ï–ù")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üîç –ü–û–õ–ù–´–ô –¢–ï–°–¢ –û–ë–†–ê–ë–û–¢–ö–ò –ö–û–ú–ê–ù–î")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
    test_command_handling()
    
    # –¢–µ—Å—Ç 2: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram
    test_telegram_integration()
    
    # –¢–µ—Å—Ç 3: –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º
    test_system_switching_logic()
    
    print(f"\nüéØ –¢–ï–°–¢ –û–ë–†–ê–ë–û–¢–ö–ò –ö–û–ú–ê–ù–î –ó–ê–í–ï–†–®–ï–ù!")
    print(f"‚úÖ –í–°–ï –ö–û–ú–ê–ù–î–´ –†–ê–ë–û–¢–ê–Æ–¢ –ö–û–†–†–ï–ö–¢–ù–û!")

if __name__ == "__main__":
    main() 