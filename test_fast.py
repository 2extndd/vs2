#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∞–Ω—Ç–∏–±–∞–Ω —Å–∏—Å—Ç–µ–º—ã
"""

import time
import random
from antiban_fast import fast_antiban_system

def quick_test():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã"""
    print("‚ö° –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –ê–ù–¢–ò–ë–ê–ù –°–ò–°–¢–ï–ú–´")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    print(f"\nüîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:")
    print(f"  –°–∏—Å—Ç–µ–º–∞ —Å–æ–∑–¥–∞–Ω–∞: {'‚úÖ' if fast_antiban_system else '‚ùå'}")
    
    # –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∑–∞–ø—Ä–æ—Å–æ–≤
    print(f"\nüîÑ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç (5 –∑–∞–ø—Ä–æ—Å–æ–≤):")
    
    test_params = {
        'page': '1',
        'per_page': '2',
        'search_text': 'test',
        'order': 'newest_first'
    }
    
    success_count = 0
    start_time = time.time()
    
    for i in range(5):
        print(f"  –ó–∞–ø—Ä–æ—Å {i+1}/5...", end=" ")
        
        try:
            result = fast_antiban_system.get_vinted_items(test_params)
            if result:
                success_count += 1
                print("‚úÖ")
            else:
                print("‚ùå")
        except Exception as e:
            print(f"‚ùå {str(e)[:20]}")
    
    end_time = time.time()
    total_time = end_time - start_time
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    stats = fast_antiban_system.get_stats()
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"  –í—Ä–µ–º—è: {total_time:.1f} —Å–µ–∫")
    print(f"  –£—Å–ø–µ—à–Ω—ã—Ö: {success_count}/5")
    print(f"  –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {stats['total_requests']}")
    print(f"  –í—Å–µ–≥–æ –æ—à–∏–±–æ–∫: {stats['total_errors']}")
    print(f"  –ë–ª–æ–∫–∏—Ä–æ–≤–æ–∫: {stats['total_blocks']}")
    print(f"  –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {stats['success_rate']:.1f}%")
    print(f"  –†–æ—Ç–∞—Ü–∏–π —Å–µ—Å—Å–∏–π: {stats['session_rotations']}")
    
    # –û—Ü–µ–Ω–∫–∞
    if success_count >= 3:
        print(f"\n‚úÖ –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢!")
        print(f"  –°–∫–æ—Ä–æ—Å—Ç—å: {5/total_time:.2f} –∑–∞–ø—Ä–æ—Å–æ–≤/—Å–µ–∫")
        return True
    else:
        print(f"\n‚ùå –°–ò–°–¢–ï–ú–ê –ù–£–ñ–î–ê–ï–¢–°–Ø –í –ù–ê–°–¢–†–û–ô–ö–ï")
        return False

if __name__ == "__main__":
    quick_test()