#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤ –∞–Ω—Ç–∏–±–∞–Ω–∞
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import logging
import Config
from vinted_scanner import vinted_antiblock, system_mode, ADVANCED_SYSTEM_AVAILABLE
from advanced_antiban import get_advanced_system

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def test_mode_switching():
    """–¢–µ—Å—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤"""
    print("\nüß™ –¢–ï–°–¢ –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–Ø –†–ï–ñ–ò–ú–û–í:")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é —Å–∏—Å—Ç–µ–º—É
    if not ADVANCED_SYSTEM_AVAILABLE:
        print("‚ùå –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        return
        
    advanced_system = get_advanced_system()
    
    print(f"üéØ –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: {system_mode}")
    print(f"üì° –ü—Ä–æ–∫—Å–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {len(advanced_system.proxies)}")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π –∫–ª–∏–µ–Ω—Ç–æ–≤
    print("\nüîç –¢–ï–°–¢ –ü–†–û–§–ò–õ–ï–ô –ö–õ–ò–ï–ù–¢–û–í:")
    print("-" * 30)
    
    profiles = advanced_system.client_profiles
    print(f"üìä –°–æ–∑–¥–∞–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: {len(profiles)}")
    
    for i, profile in enumerate(profiles[:3]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
        print(f"   {i+1}. {profile['name']}")
        print(f"      User-Agent: {profile['user_agent'][:50]}...")
        print(f"      Accept: {profile['accept']}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ –ø—Ä–æ–∫—Å–∏
    print("\nüîÑ –¢–ï–°–¢ –†–û–¢–ê–¶–ò–ò –ü–†–û–ö–°–ò:")
    print("-" * 30)
    
    print("üì° –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–∫—Å–∏:")
    for i, proxy in enumerate(advanced_system.proxies):
        print(f"   {i+1}. {proxy['host']}:{proxy['port']}")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ—Ç–∞—Ü–∏–∏
    print("\nüöÄ –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤:")
    for i in range(6):  # –ë–æ–ª—å—à–µ —á–µ–º max_requests_per_proxy (5)
        old_proxy = advanced_system.current_proxy
        advanced_system._rotate_proxy()
        new_proxy = advanced_system.current_proxy
        
        if old_proxy != new_proxy:
            print(f"   –ó–∞–ø—Ä–æ—Å {i+1}: –†–æ—Ç–∞—Ü–∏—è –ø—Ä–æ–∫—Å–∏")
        else:
            print(f"   –ó–∞–ø—Ä–æ—Å {i+1}: –¢–æ—Ç –∂–µ –ø—Ä–æ–∫—Å–∏")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è/–æ—Ç–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–∫—Å–∏
    print("\nüì° –¢–ï–°–¢ –í–ö–õ–Æ–ß–ï–ù–ò–Ø/–û–¢–ö–õ–Æ–ß–ï–ù–ò–Ø –ü–†–û–ö–°–ò:")
    print("-" * 40)
    
    # –í–∫–ª—é—á–∞–µ–º –ø—Ä–æ–∫—Å–∏
    advanced_system.enable_proxies()
    print(f"‚úÖ –ü—Ä–æ–∫—Å–∏ –≤–∫–ª—é—á–µ–Ω—ã: {advanced_system.current_proxy['host']}:{advanced_system.current_proxy['port']}")
    
    # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–∫—Å–∏
    advanced_system.disable_proxies()
    print(f"‚ùå –ü—Ä–æ–∫—Å–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã: {advanced_system.current_proxy is None}")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("\nüìä –¢–ï–°–¢ –°–¢–ê–¢–ò–°–¢–ò–ö–ò:")
    print("-" * 20)
    
    stats = advanced_system.get_stats()
    print(f"üìä HTTP –∑–∞–ø—Ä–æ—Å—ã: {stats['http_requests']}")
    print(f"üìä HTTP —É—Å–ø–µ—Ö: {stats['http_success']}")
    print(f"üìä –ü—Ä–æ–∫—Å–∏: {stats['proxies_count']} –∞–∫—Ç–∏–≤–Ω—ã—Ö")
    print(f"üìä –¢–µ–∫—É—â–∏–π –ø—Ä–æ–∫—Å–∏: {stats['current_proxy']}")
    
    if stats.get('proxy_stats'):
        print("\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–∫—Å–∏:")
        for proxy, proxy_stat in stats['proxy_stats'].items():
            print(f"   ‚Ä¢ {proxy}: {proxy_stat['success']}/{proxy_stat['requests']} ({proxy_stat['success_rate']:.1f}%)")
    
    print("\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")

def test_error_handling():
    """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫"""
    print("\nüö® –¢–ï–°–¢ –û–ë–†–ê–ë–û–¢–ö–ò –û–®–ò–ë–û–ö:")
    print("=" * 40)
    
    if not ADVANCED_SYSTEM_AVAILABLE:
        print("‚ùå –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        return
        
    advanced_system = get_advanced_system()
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
    print("üöÄ –°–∏–º—É–ª—è—Ü–∏—è –æ—à–∏–±–æ–∫...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ—à–∏–±–∫–∏ –≤ –ø—Ä–æ–∫—Å–∏
    for proxy in advanced_system.proxies[:2]:  # –ü–µ—Ä–≤—ã–µ 2 –ø—Ä–æ–∫—Å–∏
        proxy['errors'] = 3
        print(f"   ‚ùå –ü—Ä–æ–∫—Å–∏ {proxy['host']}:{proxy['port']} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ—Ç–∞—Ü–∏—é —Å —É—á–µ—Ç–æ–º –æ—à–∏–±–æ–∫
    print("\nüîÑ –†–æ—Ç–∞—Ü–∏—è —Å —É—á–µ—Ç–æ–º –æ—à–∏–±–æ–∫:")
    for i in range(3):
        old_proxy = advanced_system.current_proxy
        advanced_system._rotate_proxy()
        new_proxy = advanced_system.current_proxy
        
        if old_proxy != new_proxy:
            print(f"   –†–æ—Ç–∞—Ü–∏—è {i+1}: {new_proxy['host']}:{new_proxy['port']}")
        else:
            print(f"   –†–æ—Ç–∞—Ü–∏—è {i+1}: –¢–æ—Ç –∂–µ –ø—Ä–æ–∫—Å–∏")
    
    print("‚úÖ –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω!")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–Ø –†–ï–ñ–ò–ú–û–í")
    print("=" * 50)
    
    try:
        test_mode_switching()
        test_error_handling()
        
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("=" * 50)
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –í –¢–ï–°–¢–ê–•: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main() 