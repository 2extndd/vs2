#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤ /fast –∏ /slow
"""

import sys
sys.path.append('.')

import vinted_scanner
import asyncio
from unittest.mock import Mock, AsyncMock

async def test_mode_switching():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–∫ –æ–±—ä–µ–∫—Ç—ã
    mock_update = Mock()
    mock_context = Mock()
    mock_message = Mock()
    mock_message.reply_text = AsyncMock()  # AsyncMock –¥–ª—è async —Ñ—É–Ω–∫—Ü–∏–π
    mock_update.message = mock_message
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    print(f"üìä –ù–∞—á–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º: {vinted_scanner.scan_mode}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /fast
    print("\nüê∞ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /fast...")
    await vinted_scanner.fast_command(mock_update, mock_context)
    print(f"‚úÖ –†–µ–∂–∏–º –ø–æ—Å–ª–µ /fast: {vinted_scanner.scan_mode}")
    mock_message.reply_text.assert_called_with("üê∞ FAST mode: 5-7s priority, 10-15s normal")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /slow
    print("\nüêå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /slow...")
    await vinted_scanner.slow_command(mock_update, mock_context)
    print(f"‚úÖ –†–µ–∂–∏–º –ø–æ—Å–ª–µ /slow: {vinted_scanner.scan_mode}")
    mock_message.reply_text.assert_called_with("üêå SLOW mode: 25-35s priority, 45-60s normal")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /mode
    print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /mode...")
    await vinted_scanner.mode_command(mock_update, mock_context)
    
    print("\n‚úÖ –í—Å–µ –∫–æ–º–∞–Ω–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    print(f"üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º: {vinted_scanner.scan_mode}")

if __name__ == "__main__":
    asyncio.run(test_mode_switching()) 