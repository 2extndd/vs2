#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (Telegram, Email, Slack)
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import logging
import Config
from vinted_scanner import (
    send_telegram_message, send_email, send_slack_message
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def test_telegram_notification():
    """–¢–µ—Å—Ç Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    print("\nüì± –¢–ï–°–¢ TELEGRAM –£–í–ï–î–û–ú–õ–ï–ù–ò–ô:")
    print("=" * 40)
    
    if not Config.telegram_bot_token or not Config.telegram_chat_id:
        print("‚ùå Telegram –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        return False
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_item = {
        'title': 'üß™ –¢–ï–°–¢–û–í–´–ô –¢–û–í–ê–†',
        'price': '25.0 EUR',
        'url': 'https://www.vinted.de/items/test',
        'image': 'https://via.placeholder.com/300x400',
        'size': 'M'
    }
    
    try:
        print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ...")
        success = send_telegram_message(
            test_item['title'],
            test_item['price'],
            test_item['url'],
            test_item['image'],
            test_item['size'],
            thread_id=190
        )
        
        if success:
            print("‚úÖ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï: {e}")
        return False

def test_email_notification():
    """–¢–µ—Å—Ç Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    print("\nüìß –¢–ï–°–¢ EMAIL –£–í–ï–î–û–ú–õ–ï–ù–ò–ô:")
    print("=" * 35)
    
    if not Config.smtp_username or not Config.smtp_server:
        print("‚ùå Email –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        return False
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_item = {
        'title': 'üß™ –¢–ï–°–¢–û–í–´–ô –¢–û–í–ê–†',
        'price': '25.0 EUR',
        'url': 'https://www.vinted.de/items/test',
        'image': 'https://via.placeholder.com/300x400',
        'size': 'M'
    }
    
    try:
        print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ email...")
        send_email(
            test_item['title'],
            test_item['price'],
            test_item['url'],
            test_item['image'],
            test_item['size']
        )
        print("‚úÖ Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        return True
        
    except Exception as e:
        print(f"‚ùå –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï: {e}")
        return False

def test_slack_notification():
    """–¢–µ—Å—Ç Slack —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    print("\nüí¨ –¢–ï–°–¢ SLACK –£–í–ï–î–û–ú–õ–ï–ù–ò–ô:")
    print("=" * 35)
    
    if not Config.slack_webhook_url:
        print("‚ùå Slack –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        return False
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_item = {
        'title': 'üß™ –¢–ï–°–¢–û–í–´–ô –¢–û–í–ê–†',
        'price': '25.0 EUR',
        'url': 'https://www.vinted.de/items/test',
        'image': 'https://via.placeholder.com/300x400',
        'size': 'M'
    }
    
    try:
        print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ Slack —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ...")
        send_slack_message(
            test_item['title'],
            test_item['price'],
            test_item['url'],
            test_item['image'],
            test_item['size']
        )
        print("‚úÖ Slack —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        return True
        
    except Exception as e:
        print(f"‚ùå –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï: {e}")
        return False

def test_config_validation():
    """–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("\n‚öôÔ∏è –¢–ï–°–¢ –í–ê–õ–ò–î–ê–¶–ò–ò –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:")
    print("=" * 45)
    
    config_checks = {
        'Vinted URL': bool(Config.vinted_url),
        'Telegram Bot Token': bool(Config.telegram_bot_token),
        'Telegram Chat ID': bool(Config.telegram_chat_id),
        'SMTP Username': bool(Config.smtp_username),
        'SMTP Server': bool(Config.smtp_server),
        'Slack Webhook': bool(Config.slack_webhook_url),
        'Topics Count': len(Config.topics) > 0
    }
    
    print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫:")
    for setting, is_set in config_checks.items():
        status = "‚úÖ" if is_set else "‚ùå"
        print(f"   {status} {setting}")
    
    passed = sum(config_checks.values())
    total = len(config_checks)
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {passed}/{total} –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
    
    if passed == total:
        print("üéâ –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã!")
        return True
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        return False

def test_real_item_processing():
    """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞"""
    print("\nüõçÔ∏è –¢–ï–°–¢ –û–ë–†–ê–ë–û–¢–ö–ò –†–ï–ê–õ–¨–ù–û–ì–û –¢–û–í–ê–†–ê:")
    print("=" * 45)
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–≤–∞—Ä –∏–∑ Vinted
    real_item = {
        'id': '6787967420',
        'title': 'George Gina & Lucy Tasche',
        'price': {'amount': '18.0', 'currency_code': 'EUR'},
        'url': 'https://www.vinted.de/items/6787967420',
        'photo': {'full_size_url': 'https://img01-vinted-com.akamaized.net/...'},
        'size_title': 'M'
    }
    
    print(f"üì¶ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä: {real_item['title']}")
    print(f"üí∞ –¶–µ–Ω–∞: {real_item['price']['amount']} {real_item['price']['currency_code']}")
    print(f"üîó URL: {real_item['url']}")
    print(f"üìè –†–∞–∑–º–µ—Ä: {real_item.get('size_title', 'N/A')}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    notifications_sent = 0
    
    # Telegram
    if Config.telegram_bot_token and Config.telegram_chat_id:
        try:
            success = send_telegram_message(
                real_item['title'],
                f"{real_item['price']['amount']} {real_item['price']['currency_code']}",
                real_item['url'],
                real_item['photo']['full_size_url'],
                real_item.get('size_title'),
                thread_id=190
            )
            if success:
                notifications_sent += 1
                print("‚úÖ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {e}")
    
    # Email
    if Config.smtp_username and Config.smtp_server:
        try:
            send_email(
                real_item['title'],
                f"{real_item['price']['amount']} {real_item['price']['currency_code']}",
                real_item['url'],
                real_item['photo']['full_size_url'],
                real_item.get('size_title')
            )
            notifications_sent += 1
            print("‚úÖ Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ Email: {e}")
    
    # Slack
    if Config.slack_webhook_url:
        try:
            send_slack_message(
                real_item['title'],
                f"{real_item['price']['amount']} {real_item['price']['currency_code']}",
                real_item['url'],
                real_item['photo']['full_size_url'],
                real_item.get('size_title')
            )
            notifications_sent += 1
            print("‚úÖ Slack —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ Slack: {e}")
    
    print(f"\nüìä –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {notifications_sent}")
    return notifications_sent > 0

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ô")
    print("=" * 40)
    
    results = {
        'config_validation': False,
        'telegram_notification': False,
        'email_notification': False,
        'slack_notification': False,
        'real_item_processing': False
    }
    
    try:
        # –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        results['config_validation'] = test_config_validation()
        
        # –¢–µ—Å—Ç Telegram
        results['telegram_notification'] = test_telegram_notification()
        
        # –¢–µ—Å—Ç Email
        results['email_notification'] = test_email_notification()
        
        # –¢–µ—Å—Ç Slack
        results['slack_notification'] = test_slack_notification()
        
        # –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        results['real_item_processing'] = test_real_item_processing()
        
        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –£–í–ï–î–û–ú–õ–ï–ù–ò–ô:")
        print("=" * 45)
        
        passed = sum(results.values())
        total = len(results)
        
        for test, result in results.items():
            status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
            print(f"   {test}: {status}")
        
        print(f"\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
        
        if passed == total:
            print("üéâ –í–°–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø –†–ê–ë–û–¢–ê–Æ–¢!")
        else:
            print("‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø –ù–ï –†–ê–ë–û–¢–ê–Æ–¢")
        
    except Exception as e:
        print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main() 