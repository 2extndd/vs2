#!/usr/bin/env python3
"""
–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø—Ä–æ–∫—Å–∏
"""

import requests
import time
import random

def test_proxy_force():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º Vinted —Å —Ä–∞–∑–Ω—ã–º–∏ –ø—Ä–æ–∫—Å–∏"""
    print("üåê –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –° –ü–†–û–ö–°–ò")
    print("=" * 40)
    
    # –°–ø–∏—Å–æ–∫ –ø—Ä–æ–∫—Å–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    proxies_list = [
        "136.243.177.154:23567",
        "175.110.113.245:15595", 
        "185.199.229.156:7492",
        "185.199.228.220:7492",
        "185.199.231.45:7492",
        "188.74.210.207:6286",
        "188.74.183.10:8279",
        "188.74.210.21:6100",
        "45.155.68.129:8133",
        "154.95.36.199:6893"
    ]
    
    test_url = "https://www.vinted.de/api/v2/catalog/items"
    params = {
        'page': '1',
        'per_page': '2',
        'search_text': '',
        'catalog_ids': '',
        'brand_ids': '',
        'order': 'newest_first',
        'price_to': '50'
    }
    
    headers = {
        "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
    }
    
    success_count = 0
    total_count = 0
    
    print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º {len(proxies_list)} –ø—Ä–æ–∫—Å–∏...")
    print()
    
    for i, proxy in enumerate(proxies_list, 1):
        total_count += 1
        print(f"üìã –¢–µ—Å—Ç {i}/{len(proxies_list)}: {proxy}")
        
        try:
            proxy_dict = {
                'http': f'http://{proxy}',
                'https': f'http://{proxy}'
            }
            
            response = requests.get(
                test_url, 
                params=params, 
                headers=headers, 
                proxies=proxy_dict, 
                timeout=15
            )
            
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
            if response.status_code == 200:
                success_count += 1
                print(f"   ‚úÖ –£–°–ü–ï–•! –ü—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                try:
                    data = response.json()
                    items_count = len(data.get('items', []))
                    print(f"   üì¶ –ü–æ–ª—É—á–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {items_count}")
                except:
                    print(f"   üì¶ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã (–Ω–µ JSON)")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                if response.status_code == 403:
                    print(f"   üö´ Vinted –±–ª–æ–∫–∏—Ä—É–µ—Ç —ç—Ç–æ—Ç –ø—Ä–æ–∫—Å–∏")
                elif response.status_code == 429:
                    print(f"   ‚è∞ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤")
                else:
                    print(f"   üìÑ –û—Ç–≤–µ—Ç: {response.text[:50]}...")
                    
        except requests.exceptions.ProxyError:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–∫—Å–∏: —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        except requests.exceptions.ConnectTimeout:
            print(f"   ‚è∞ –¢–∞–π–º–∞—É—Ç: –ø—Ä–æ–∫—Å–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
        except requests.exceptions.ReadTimeout:
            print(f"   ‚è∞ –¢–∞–π–º–∞—É—Ç —á—Ç–µ–Ω–∏—è: –ø—Ä–æ–∫—Å–∏ –º–µ–¥–ª–µ–Ω–Ω—ã–π")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {str(e)[:50]}")
        
        print()
        time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    
    # –ò—Ç–æ–≥–∏
    print("=" * 40)
    print(f"üìä –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"   –í—Å–µ–≥–æ –ø—Ä–æ–∫—Å–∏: {total_count}")
    print(f"   –£—Å–ø–µ—à–Ω—ã—Ö: {success_count}")
    print(f"   –ù–µ—É–¥–∞—á–Ω—ã—Ö: {total_count - success_count}")
    print(f"   –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {(success_count/total_count)*100:.1f}%")
    
    if success_count > 0:
        print(f"\n‚úÖ –ù–ê–ô–î–ï–ù–´ –†–ê–ë–û–¢–ê–Æ–©–ò–ï –ü–†–û–ö–°–ò!")
        print(f"   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: /recovery force_proxy")
    else:
        print(f"\n‚ùå –ù–ï–¢ –†–ê–ë–û–¢–ê–Æ–©–ò–• –ü–†–û–ö–°–ò")
        print(f"   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: /recovery force_noproxy")
    
    print(f"\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")

if __name__ == "__main__":
    test_proxy_force() 