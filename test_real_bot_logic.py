#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–∏ –±–æ—Ç–∞
"""

import requests
import logging
import Config
import time
import random
from vinted_scanner import vinted_antiblock
from advanced_antiban import advanced_system

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def test_real_bot_logic():
    """–¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–∏ –±–æ—Ç–∞"""
    print("üß™ –¢–ï–°–¢ –†–ï–ê–õ–¨–ù–û–ô –õ–û–ì–ò–ö–ò –ë–û–¢–ê:")
    print("=" * 50)
    
    # 1. –ü–æ–ª—É—á–∞–µ–º session –∏ headers –∫–∞–∫ –≤ –±–æ—Ç–µ
    session = requests.Session()
    headers = vinted_antiblock.get_headers()
    
    # 2. –ü–æ–ª—É—á–∞–µ–º cookies –∫–∞–∫ –≤ –±–æ—Ç–µ
    print("üîß –ü–æ–ª—É—á–∞–µ–º cookies...")
    session.post(Config.vinted_url, headers=headers, timeout=30)
    cookies = session.cookies.get_dict()
    print(f"üç™ Cookies: {cookies}")
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –±–æ—Ç–∞
    topic_data = Config.topics["bags"]
    params = topic_data["query"]
    print(f"üìã Params: {params}")
    
    # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é —Å–∏—Å—Ç–µ–º—É
    print("\nüöÄ –¢–ï–°–¢ –ü–†–û–î–í–ò–ù–£–¢–û–ô –°–ò–°–¢–ï–ú–´:")
    url = f"{Config.vinted_url}/api/v2/catalog/items"
    
    try:
        result = advanced_system.make_http_request(url, params, cookies)
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {result is not None}")
        if result:
            print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(result.get('items', []))}")
        else:
            print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
            
        print(f"üìä HTTP requests: {advanced_system.http_requests}")
        print(f"üìä HTTP success: {advanced_system.http_success}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    print("\nüõ°Ô∏è –¢–ï–°–¢ –ë–ê–ó–û–í–û–ô –°–ò–°–¢–ï–ú–´:")
    try:
        response = requests.get(
            url, 
            params=params, 
            cookies=cookies, 
            headers=headers,
            timeout=30
        )
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(data.get('items', []))}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text[:100]}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_real_bot_logic() 