#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Å Vinted
"""

import sys
import json
sys.path.append('.')

from advanced_antiban import get_advanced_system
import Config

def test_real_items():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤...")
    
    system = get_advanced_system()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ø–∏–∫ Prada
    prada_params = {
        'page': '1',
        'per_page': '2',
        'search_text': '',
        'catalog_ids': '2050,1231,82',
        'brand_ids': '3573',
        'order': 'newest_first',
        'price_to': '80',
    }
    
    print(f"üîç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã Prada: {prada_params}")
    print(f"üåê URL: {Config.vinted_url}/api/v2/catalog/items")
    
    result = system.make_http_request(
        f"{Config.vinted_url}/api/v2/catalog/items",
        prada_params
    )
    
    if result:
        items = result.get('items', [])
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(items)}")
        
        if items:
            print("\nüì¶ –ü—Ä–∏–º–µ—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤ Prada:")
            for i, item in enumerate(items[:3], 1):
                title = item.get('title', 'N/A')
                price = item.get('price', {})
                amount = price.get('amount', 'N/A')
                currency = price.get('currency_code', '')
                brand = item.get('brand_title', 'N/A')
                
                print(f"  {i}. {title}")
                print(f"     üí∞ {amount} {currency}")
                print(f"     üè∑Ô∏è {brand}")
                print()
        else:
            print("‚ùå –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö")
    
    print("\n" + "="*50)
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–ø–∏–∫–∞ bags...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ø–∏–∫ bags
    bags_params = {
        'page': '1',
        'per_page': '2',
        'search_text': '',
        'catalog_ids': '',
        'brand_ids': '212366',
        'order': 'newest_first',
        'price_to': '45',
    }
    
    print(f"üîç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã bags: {bags_params}")
    
    result2 = system.make_http_request(
        f"{Config.vinted_url}/api/v2/catalog/items",
        bags_params
    )
    
    if result2:
        items2 = result2.get('items', [])
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ bags: {len(items2)}")
        
        if items2:
            print("\nüì¶ –ü—Ä–∏–º–µ—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤ bags:")
            for i, item in enumerate(items2[:3], 1):
                title = item.get('title', 'N/A')
                price = item.get('price', {})
                amount = price.get('amount', 'N/A')
                currency = price.get('currency_code', '')
                brand = item.get('brand_title', 'N/A')
                
                print(f"  {i}. {title}")
                print(f"     üí∞ {amount} {currency}")
                print(f"     üè∑Ô∏è {brand}")
                print()
        else:
            print("‚ùå –¢–æ–≤–∞—Ä—ã bags –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö bags")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    stats = system.get_stats()
    print(f"üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:")
    print(f"   –ó–∞–ø—Ä–æ—Å—ã: {stats['http_requests']}")
    print(f"   –£—Å–ø–µ—Ö: {stats['http_success']}")
    print(f"   –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {stats['success_rate']:.1f}%")
    print(f"   –û—à–∏–±–∫–∏ 403: {stats['errors_403']}")
    print(f"   –û—à–∏–±–∫–∏ 429: {stats['errors_429']}")
    print(f"   –ü–æ–¥—Ä—è–¥ –æ—à–∏–±–æ–∫: {stats['consecutive_errors']}")
    print(f"   –¢–µ–∫—É—â–∏–π –ø—Ä–æ–∫—Å–∏: {stats['current_proxy']}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
    if result and result.get('items'):
        item = result['items'][0]
        print(f"\nüîç –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞:")
        print(f"   ID: {item.get('id')}")
        print(f"   URL: {item.get('url', 'N/A')}")
        print(f"   –§–æ—Ç–æ: {item.get('photo', {}).get('full_size_url', 'N/A')[:50]}...")
        print(f"   –†–∞–∑–º–µ—Ä: {item.get('size_title', 'N/A')}")
        print(f"   –í–∏–¥–∏–º–æ—Å—Ç—å: {item.get('is_visible')}")

if __name__ == "__main__":
    test_real_items() 