#!/usr/bin/env python3
"""
–†–µ–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã —Å –Ω–∞—Å—Ç–æ—è—â–∏–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏ –∫ Vinted API
"""

import sys
import os
import time
import requests
import json
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import logging
import Config
from vinted_scanner import (
    vinted_antiblock, system_mode, ADVANCED_SYSTEM_AVAILABLE,
    advanced_system_errors, basic_system_errors, max_system_errors,
    scan_topic, list_analyzed_items
)
from advanced_antiban import get_advanced_system

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def test_basic_system_real():
    """–¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏"""
    print("\nüîç –¢–ï–°–¢ –ë–ê–ó–û–í–û–ô –°–ò–°–¢–ï–ú–´ (–†–ï–ê–õ–¨–ù–´–ï –ó–ê–ü–†–û–°–´):")
    print("=" * 55)
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    headers = vinted_antiblock.get_headers()
    print(f"üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏: {headers}")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    test_params = {
        'page': '1',
        'per_page': '5',
        'search_text': '',
        'catalog_ids': '',
        'brand_ids': '212366',  # GGL
        'order': 'newest_first',
        'price_to': '45'
    }
    
    url = f"{Config.vinted_url}/api/v2/catalog/items"
    print(f"üåê URL: {url}")
    print(f"üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {test_params}")
    
    try:
        # –î–µ–ª–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å
        response = requests.get(url, params=test_params, headers=headers, timeout=30)
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            items_count = len(data.get('items', []))
            print(f"‚úÖ –£–°–ü–ï–•: –ù–∞–π–¥–µ–Ω–æ {items_count} —Ç–æ–≤–∞—Ä–æ–≤")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 2 —Ç–æ–≤–∞—Ä–∞
            for i, item in enumerate(data.get('items', [])[:2]):
                print(f"   {i+1}. {item.get('title', 'N/A')} - {item.get('price', {}).get('amount', 'N/A')} {item.get('price', {}).get('currency_code', '')}")
            
            return True
        else:
            print(f"‚ùå –û–®–ò–ë–ö–ê: {response.status_code}")
            print(f"üìù –û—Ç–≤–µ—Ç: {response.text[:200]}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï: {e}")
        return False

def test_advanced_system_real():
    """–¢–µ—Å—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏"""
    print("\nüöÄ –¢–ï–°–¢ –ü–†–û–î–í–ò–ù–£–¢–û–ô –°–ò–°–¢–ï–ú–´ (–†–ï–ê–õ–¨–ù–´–ï –ó–ê–ü–†–û–°–´):")
    print("=" * 55)
    
    if not ADVANCED_SYSTEM_AVAILABLE:
        print("‚ùå –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        return False
        
    advanced_system = get_advanced_system()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    test_params = {
        'page': '1',
        'per_page': '5',
        'search_text': '',
        'catalog_ids': '',
        'brand_ids': '212366',  # GGL
        'order': 'newest_first',
        'price_to': '45'
    }
    
    url = f"{Config.vinted_url}/api/v2/catalog/items"
    print(f"üåê URL: {url}")
    print(f"üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {test_params}")
    
    try:
        # –î–µ–ª–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é —Å–∏—Å—Ç–µ–º—É
        data = advanced_system.make_http_request(url, test_params)
        
        if data:
            items_count = len(data.get('items', []))
            print(f"‚úÖ –£–°–ü–ï–•: –ù–∞–π–¥–µ–Ω–æ {items_count} —Ç–æ–≤–∞—Ä–æ–≤")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 2 —Ç–æ–≤–∞—Ä–∞
            for i, item in enumerate(data.get('items', [])[:2]):
                print(f"   {i+1}. {item.get('title', 'N/A')} - {item.get('price', {}).get('amount', 'N/A')} {item.get('price', {}).get('currency_code', '')}")
            
            return True
        else:
            print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï: {e}")
        return False

def test_proxy_requests():
    """–¢–µ—Å—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏"""
    print("\nüì° –¢–ï–°–¢ –ó–ê–ü–†–û–°–û–í –ß–ï–†–ï–ó –ü–†–û–ö–°–ò:")
    print("=" * 45)
    
    if not ADVANCED_SYSTEM_AVAILABLE:
        print("‚ùå –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        return False
        
    advanced_system = get_advanced_system()
    
    # –í–∫–ª—é—á–∞–µ–º –ø—Ä–æ–∫—Å–∏
    advanced_system.enable_proxies()
    print(f"‚úÖ –ü—Ä–æ–∫—Å–∏ –≤–∫–ª—é—á–µ–Ω: {advanced_system.current_proxy['host']}:{advanced_system.current_proxy['port']}")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    test_params = {
        'page': '1',
        'per_page': '3',
        'search_text': '',
        'catalog_ids': '',
        'brand_ids': '212366',
        'order': 'newest_first',
        'price_to': '45'
    }
    
    url = f"{Config.vinted_url}/api/v2/catalog/items"
    
    try:
        # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
        data = advanced_system.make_http_request(url, test_params)
        
        if data:
            items_count = len(data.get('items', []))
            print(f"‚úÖ –£–°–ü–ï–• –ß–ï–†–ï–ó –ü–†–û–ö–°–ò: –ù–∞–π–¥–µ–Ω–æ {items_count} —Ç–æ–≤–∞—Ä–æ–≤")
            return True
        else:
            print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï: {e}")
        return False

def test_mode_switching_real():
    """–¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤"""
    print("\nüîÑ –¢–ï–°–¢ –†–ï–ê–õ–¨–ù–û–ì–û –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–Ø –†–ï–ñ–ò–ú–û–í:")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_topic = {
        "thread_id": 190,
        "query": {
            'page': '1',
            'per_page': '3',
            'search_text': '',
            'catalog_ids': '',
            'brand_ids': '212366',
            'order': 'newest_first',
            'price_to': '45',
        },
        "exclude_catalog_ids": "26,98,146,139,152,1918"
    }
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é –∏ cookies
    session = requests.Session()
    cookies = {}
    
    print("üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∂–∏–º 'basic':")
    global system_mode
    old_mode = system_mode
    system_mode = "basic"
    
    try:
        # –í—ã–∑—ã–≤–∞–µ–º scan_topic –Ω–∞–ø—Ä—è–º—É—é
        scan_topic("test_basic", test_topic, cookies, session, is_priority=True)
        print("‚úÖ –†–µ–∂–∏–º 'basic' —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–µ–∂–∏–º–µ 'basic': {e}")
    
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∂–∏–º 'advanced':")
    system_mode = "advanced"
    
    try:
        scan_topic("test_advanced", test_topic, cookies, session, is_priority=True)
        print("‚úÖ –†–µ–∂–∏–º 'advanced' —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–µ–∂–∏–º–µ 'advanced': {e}")
    
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∂–∏–º 'proxy':")
    system_mode = "proxy"
    
    try:
        scan_topic("test_proxy", test_topic, cookies, session, is_priority=True)
        print("‚úÖ –†–µ–∂–∏–º 'proxy' —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–µ–∂–∏–º–µ 'proxy': {e}")
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ä—ã–π —Ä–µ–∂–∏–º
    system_mode = old_mode
    print(f"\nüîÑ –í–æ–∑–≤—Ä–∞—Ç –∫ —Ä–µ–∂–∏–º—É: {system_mode}")

def test_multiple_topics():
    """–¢–µ—Å—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–æ–ø–∏–∫–æ–≤"""
    print("\nüìã –¢–ï–°–¢ –ù–ï–°–ö–û–õ–¨–ö–ò–• –¢–û–ü–ò–ö–û–í:")
    print("=" * 35)
    
    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 3 —Ç–æ–ø–∏–∫–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    topics = list(Config.topics.items())[:3]
    
    session = requests.Session()
    cookies = {}
    
    for topic_name, topic_data in topics:
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ø–∏–∫: {topic_name}")
        print("-" * 30)
        
        try:
            scan_topic(topic_name, topic_data, cookies, session, is_priority=False)
            print(f"‚úÖ –¢–æ–ø–∏–∫ '{topic_name}' –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–æ–ø–∏–∫–µ '{topic_name}': {e}")

def test_error_simulation():
    """–¢–µ—Å—Ç —Å–∏–º—É–ª—è—Ü–∏–∏ –æ—à–∏–±–æ–∫"""
    print("\nüö® –¢–ï–°–¢ –°–ò–ú–£–õ–Ø–¶–ò–ò –û–®–ò–ë–û–ö:")
    print("=" * 35)
    
    if not ADVANCED_SYSTEM_AVAILABLE:
        print("‚ùå –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        return
        
    advanced_system = get_advanced_system()
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –≤ –ø—Ä–æ–∫—Å–∏
    print("üö® –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –≤ –ø—Ä–æ–∫—Å–∏...")
    for proxy in advanced_system.proxies[:2]:
        proxy['errors'] = 3
        print(f"   ‚ùå –ü—Ä–æ–∫—Å–∏ {proxy['host']}:{proxy['port']} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
    
    # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å - –¥–æ–ª–∂–µ–Ω –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ø—Ä–æ–∫—Å–∏
    test_params = {
        'page': '1',
        'per_page': '2',
        'search_text': '',
        'catalog_ids': '',
        'brand_ids': '212366',
        'order': 'newest_first',
        'price_to': '45'
    }
    
    url = f"{Config.vinted_url}/api/v2/catalog/items"
    
    try:
        data = advanced_system.make_http_request(url, test_params)
        if data:
            print("‚úÖ –ó–∞–ø—Ä–æ—Å –ø—Ä–æ—à–µ–ª —á–µ—Ä–µ–∑ —Ä–∞–±–æ—á–∏–π –ø—Ä–æ–∫—Å–∏")
        else:
            print("‚ùå –ó–∞–ø—Ä–æ—Å –Ω–µ –ø—Ä–æ—à–µ–ª")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
    for proxy in advanced_system.proxies:
        proxy['errors'] = 0
    print("‚úÖ –û—à–∏–±–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –†–ï–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´ –° –ó–ê–ü–†–û–°–ê–ú–ò –ö VINTED API")
    print("=" * 60)
    
    results = {
        'basic_system': False,
        'advanced_system': False,
        'proxy_requests': False,
        'mode_switching': False,
        'multiple_topics': False,
        'error_simulation': False
    }
    
    try:
        # –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
        results['basic_system'] = test_basic_system_real()
        
        # –¢–µ—Å—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã
        results['advanced_system'] = test_advanced_system_real()
        
        # –¢–µ—Å—Ç –ø—Ä–æ–∫—Å–∏
        results['proxy_requests'] = test_proxy_requests()
        
        # –¢–µ—Å—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤
        test_mode_switching_real()
        results['mode_switching'] = True
        
        # –¢–µ—Å—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–æ–ø–∏–∫–æ–≤
        test_multiple_topics()
        results['multiple_topics'] = True
        
        # –¢–µ—Å—Ç —Å–∏–º—É–ª—è—Ü–∏–∏ –æ—à–∏–±–æ–∫
        test_error_simulation()
        results['error_simulation'] = True
        
        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print("=" * 30)
        
        passed = sum(results.values())
        total = len(results)
        
        for test, result in results.items():
            status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
            print(f"   {test}: {status}")
        
        print(f"\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
        
        if passed == total:
            print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        else:
            print("‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
        if list_analyzed_items:
            print(f"\nüì¶ –ù–ê–ô–î–ï–ù–û –¢–û–í–ê–†–û–í: {len(list_analyzed_items)}")
            print("   (–ü—Ä–æ–≤–µ—Ä—å—Ç–µ vinted_items.txt –¥–ª—è –¥–µ—Ç–∞–ª–µ–π)")
        
    except Exception as e:
        print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main() 