#!/usr/bin/env python3
"""
–¢–µ—Å—Ç—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è Vinted Scanner
"""

import sys
import os
import time
import json
from unittest.mock import Mock, patch, MagicMock
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import vinted_scanner
import Config

class RecoveryTestVintedScanner:
    """–¢–µ—Å—Ç—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è Vinted Scanner"""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤"""
        self.test_results = []
        self.start_time = time.time()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        self.original_scan_mode = vinted_scanner.scan_mode
        self.original_system_mode = vinted_scanner.system_mode
        self.original_current_system = vinted_scanner.current_system
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏
        vinted_scanner.basic_system_errors = 0
        vinted_scanner.advanced_no_proxy_errors = 0
        vinted_scanner.advanced_proxy_errors = 0
        vinted_scanner.last_switch_time = time.time()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º TelegramAntiBlock
        if not hasattr(vinted_scanner, 'telegram_antiblock'):
            vinted_scanner.telegram_antiblock = vinted_scanner.TelegramAntiBlock()
    
    def reset_system(self):
        """–°–±—Ä–æ—Å —Å–∏—Å—Ç–µ–º—ã –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é"""
        vinted_scanner.scan_mode = self.original_scan_mode
        vinted_scanner.system_mode = self.original_system_mode
        vinted_scanner.current_system = self.original_current_system
        vinted_scanner.basic_system_errors = 0
        vinted_scanner.advanced_no_proxy_errors = 0
        vinted_scanner.advanced_proxy_errors = 0
        vinted_scanner.telegram_antiblock.consecutive_errors = 0
        vinted_scanner.telegram_antiblock.error_backoff = 1
    
    def test_1_forced_switching_after_5_minutes(self):
        """–¢–µ—Å—Ç 1: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç"""
        print("\nüîÑ –¢–ï–°–¢ 1: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç")
        print("=" * 60)
        
        self.reset_system()
        vinted_scanner.current_system = "basic"
        vinted_scanner.last_switch_time = time.time() - 301  # 5 –º–∏–Ω—É—Ç + 1 —Å–µ–∫—É–Ω–¥–∞
        
        print(f"üìä –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
        print(f"   current_system: {vinted_scanner.current_system}")
        print(f"   last_switch_time: {vinted_scanner.last_switch_time}")
        print(f"   –í—Ä–µ–º—è –≤ —Å–∏—Å—Ç–µ–º–µ: {time.time() - vinted_scanner.last_switch_time:.1f} —Å–µ–∫—É–Ω–¥")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ
        result = vinted_scanner.should_switch_system()
        
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è: {result}")
        print(f"   –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞: {vinted_scanner.current_system}")
        print(f"   –ù–æ–≤–æ–µ –≤—Ä–µ–º—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è: {vinted_scanner.last_switch_time}")
        
        success = result and vinted_scanner.current_system == "advanced_no_proxy"
        
        self.test_results.append({
            "test": "forced_switching_5min",
            "result": result,
            "new_system": vinted_scanner.current_system,
            "success": success
        })
        
        return success
    
    def test_2_counter_reset_at_20_errors(self):
        """–¢–µ—Å—Ç 2: –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–æ–≤ –ø—Ä–∏ 20+ –æ—à–∏–±–∫–∞—Ö"""
        print("\nüîÑ –¢–ï–°–¢ 2: –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–æ–≤ –ø—Ä–∏ 20+ –æ—à–∏–±–∫–∞—Ö")
        print("=" * 60)
        
        self.reset_system()
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
        vinted_scanner.basic_system_errors = 15
        vinted_scanner.advanced_no_proxy_errors = 10
        vinted_scanner.advanced_proxy_errors = 5
        vinted_scanner.telegram_antiblock.consecutive_errors = 15
        vinted_scanner.telegram_antiblock.error_backoff = 10
        
        print(f"üìä –î–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:")
        print(f"   - basic_system_errors: {vinted_scanner.basic_system_errors}")
        print(f"   - advanced_no_proxy_errors: {vinted_scanner.advanced_no_proxy_errors}")
        print(f"   - advanced_proxy_errors: {vinted_scanner.advanced_proxy_errors}")
        print(f"   - telegram_errors: {vinted_scanner.telegram_antiblock.consecutive_errors}")
        print(f"   - telegram_backoff: {vinted_scanner.telegram_antiblock.error_backoff}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
        vinted_scanner.auto_recovery_system()
        
        print(f"üìä –ü–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:")
        print(f"   - basic_system_errors: {vinted_scanner.basic_system_errors}")
        print(f"   - advanced_no_proxy_errors: {vinted_scanner.advanced_no_proxy_errors}")
        print(f"   - advanced_proxy_errors: {vinted_scanner.advanced_proxy_errors}")
        print(f"   - telegram_errors: {vinted_scanner.telegram_antiblock.consecutive_errors}")
        print(f"   - telegram_backoff: {vinted_scanner.telegram_antiblock.error_backoff}")
        print(f"   - current_system: {vinted_scanner.current_system}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–±—Ä–æ—Å –≤—Å–µ—Ö —Å—á–µ—Ç—á–∏–∫–æ–≤
        success = (
            vinted_scanner.basic_system_errors == 0 and
            vinted_scanner.advanced_no_proxy_errors == 0 and
            vinted_scanner.advanced_proxy_errors == 0 and
            vinted_scanner.telegram_antiblock.consecutive_errors == 0 and
            vinted_scanner.telegram_antiblock.error_backoff == 1
        )
        
        self.test_results.append({
            "test": "counter_reset_20_errors",
            "basic_errors_after": vinted_scanner.basic_system_errors,
            "advanced_no_proxy_errors_after": vinted_scanner.advanced_no_proxy_errors,
            "advanced_proxy_errors_after": vinted_scanner.advanced_proxy_errors,
            "telegram_errors_after": vinted_scanner.telegram_antiblock.consecutive_errors,
            "telegram_backoff_after": vinted_scanner.telegram_antiblock.error_backoff,
            "success": success
        })
        
        return success
    
    def test_3_system_stuck_detection(self):
        """–¢–µ—Å—Ç 3: –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –∑–∞—Å—Ç—Ä–µ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã"""
        print("\nüîÑ –¢–ï–°–¢ 3: –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –∑–∞—Å—Ç—Ä–µ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã")
        print("=" * 60)
        
        self.reset_system()
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞—Å—Ç—Ä–µ–≤–∞–Ω–∏–µ –≤ —Å–∏—Å—Ç–µ–º–µ –Ω–∞ 30+ –º–∏–Ω—É—Ç
        vinted_scanner.current_system = "basic"
        vinted_scanner.last_switch_time = time.time() - 1801  # 30 –º–∏–Ω—É—Ç + 1 —Å–µ–∫—É–Ω–¥–∞
        
        print(f"üìä –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
        print(f"   current_system: {vinted_scanner.current_system}")
        print(f"   last_switch_time: {vinted_scanner.last_switch_time}")
        print(f"   –í—Ä–µ–º—è –≤ —Å–∏—Å—Ç–µ–º–µ: {time.time() - vinted_scanner.last_switch_time:.1f} —Å–µ–∫—É–Ω–¥")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
        vinted_scanner.auto_recovery_system()
        
        print(f"üìä –ü–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:")
        print(f"   current_system: {vinted_scanner.current_system}")
        print(f"   last_switch_time: {vinted_scanner.last_switch_time}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é —Å–∏—Å—Ç–µ–º—É
        success = vinted_scanner.current_system == "advanced_no_proxy"
        
        self.test_results.append({
            "test": "system_stuck_detection",
            "original_system": "basic",
            "new_system": vinted_scanner.current_system,
            "success": success
        })
        
        return success
    
    def test_4_telegram_error_recovery(self):
        """–¢–µ—Å—Ç 4: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ Telegram"""
        print("\nüîÑ –¢–ï–°–¢ 4: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ Telegram")
        print("=" * 60)
        
        self.reset_system()
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫ Telegram
        vinted_scanner.telegram_antiblock.consecutive_errors = 25
        vinted_scanner.telegram_antiblock.error_backoff = 15
        
        print(f"üìä –î–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:")
        print(f"   - consecutive_errors: {vinted_scanner.telegram_antiblock.consecutive_errors}")
        print(f"   - error_backoff: {vinted_scanner.telegram_antiblock.error_backoff}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
        vinted_scanner.auto_recovery_system()
        
        print(f"üìä –ü–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:")
        print(f"   - consecutive_errors: {vinted_scanner.telegram_antiblock.consecutive_errors}")
        print(f"   - error_backoff: {vinted_scanner.telegram_antiblock.error_backoff}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–±—Ä–æ—Å –æ—à–∏–±–æ–∫ Telegram
        success = (
            vinted_scanner.telegram_antiblock.consecutive_errors == 0 and
            vinted_scanner.telegram_antiblock.error_backoff == 1
        )
        
        self.test_results.append({
            "test": "telegram_error_recovery",
            "consecutive_errors_after": vinted_scanner.telegram_antiblock.consecutive_errors,
            "error_backoff_after": vinted_scanner.telegram_antiblock.error_backoff,
            "success": success
        })
        
        return success
    
    def test_5_proxy_failure_recovery(self):
        """–¢–µ—Å—Ç 5: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ –ø—Ä–æ–∫—Å–∏"""
        print("\nüîÑ –¢–ï–°–¢ 5: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ –ø—Ä–æ–∫—Å–∏")
        print("=" * 60)
        
        self.reset_system()
        vinted_scanner.current_system = "advanced_proxy"
        vinted_scanner.advanced_proxy_errors = 15
        
        print(f"üìä –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
        print(f"   current_system: {vinted_scanner.current_system}")
        print(f"   advanced_proxy_errors: {vinted_scanner.advanced_proxy_errors}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
        vinted_scanner.auto_recovery_system()
        
        print(f"üìä –ü–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:")
        print(f"   current_system: {vinted_scanner.current_system}")
        print(f"   advanced_proxy_errors: {vinted_scanner.advanced_proxy_errors}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –±–µ–∑ –ø—Ä–æ–∫—Å–∏
        success = (
            vinted_scanner.current_system == "advanced_no_proxy" and
            vinted_scanner.advanced_proxy_errors == 0
        )
        
        self.test_results.append({
            "test": "proxy_failure_recovery",
            "original_system": "advanced_proxy",
            "new_system": vinted_scanner.current_system,
            "proxy_errors_after": vinted_scanner.advanced_proxy_errors,
            "success": success
        })
        
        return success
    
    def test_6_critical_error_recovery(self):
        """–¢–µ—Å—Ç 6: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö"""
        print("\nüîÑ –¢–ï–°–¢ 6: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö")
        print("=" * 60)
        
        self.reset_system()
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤–æ –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º–∞—Ö
        vinted_scanner.basic_system_errors = 30
        vinted_scanner.advanced_no_proxy_errors = 25
        vinted_scanner.advanced_proxy_errors = 20
        vinted_scanner.telegram_antiblock.consecutive_errors = 30
        vinted_scanner.telegram_antiblock.error_backoff = 20
        
        print(f"üìä –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è:")
        print(f"   - basic_system_errors: {vinted_scanner.basic_system_errors}")
        print(f"   - advanced_no_proxy_errors: {vinted_scanner.advanced_no_proxy_errors}")
        print(f"   - advanced_proxy_errors: {vinted_scanner.advanced_proxy_errors}")
        print(f"   - telegram_errors: {vinted_scanner.telegram_antiblock.consecutive_errors}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
        vinted_scanner.auto_recovery_system()
        
        print(f"üìä –ü–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:")
        print(f"   - basic_system_errors: {vinted_scanner.basic_system_errors}")
        print(f"   - advanced_no_proxy_errors: {vinted_scanner.advanced_no_proxy_errors}")
        print(f"   - advanced_proxy_errors: {vinted_scanner.advanced_proxy_errors}")
        print(f"   - telegram_errors: {vinted_scanner.telegram_antiblock.consecutive_errors}")
        print(f"   - current_system: {vinted_scanner.current_system}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –≤—Å–µ—Ö –æ—à–∏–±–æ–∫
        success = (
            vinted_scanner.basic_system_errors == 0 and
            vinted_scanner.advanced_no_proxy_errors == 0 and
            vinted_scanner.advanced_proxy_errors == 0 and
            vinted_scanner.telegram_antiblock.consecutive_errors == 0 and
            vinted_scanner.telegram_antiblock.error_backoff == 1
        )
        
        self.test_results.append({
            "test": "critical_error_recovery",
            "all_errors_reset": success,
            "final_system": vinted_scanner.current_system,
            "success": success
        })
        
        return success
    
    def test_7_sequential_recovery(self):
        """–¢–µ—Å—Ç 7: –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ"""
        print("\nüîÑ –¢–ï–°–¢ 7: –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ")
        print("=" * 60)
        
        self.reset_system()
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–µ—Ä–∏—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π
        recovery_attempts = 5
        successful_recoveries = 0
        
        for i in range(recovery_attempts):
            # –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –æ—à–∏–±–∫–∏
            vinted_scanner.basic_system_errors = 20 + i * 5
            vinted_scanner.advanced_no_proxy_errors = 15 + i * 5
            vinted_scanner.advanced_proxy_errors = 10 + i * 5
            vinted_scanner.telegram_antiblock.consecutive_errors = 20 + i * 5
            
            print(f"üìä –ü–æ–ø—ã—Ç–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è {i+1}:")
            print(f"   - basic_system_errors: {vinted_scanner.basic_system_errors}")
            print(f"   - advanced_no_proxy_errors: {vinted_scanner.advanced_no_proxy_errors}")
            print(f"   - advanced_proxy_errors: {vinted_scanner.advanced_proxy_errors}")
            print(f"   - telegram_errors: {vinted_scanner.telegram_antiblock.consecutive_errors}")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
            vinted_scanner.auto_recovery_system()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
            if (vinted_scanner.basic_system_errors == 0 and 
                vinted_scanner.advanced_no_proxy_errors == 0 and
                vinted_scanner.advanced_proxy_errors == 0 and
                vinted_scanner.telegram_antiblock.consecutive_errors == 0):
                successful_recoveries += 1
                print(f"   ‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ {i+1}: –£—Å–ø–µ—à–Ω–æ")
            else:
                print(f"   ‚ùå –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ {i+1}: –ù–µ—É–¥–∞—á–Ω–æ")
        
        print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:")
        print(f"   üìà –ü–æ–ø—ã—Ç–æ–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: {recovery_attempts}")
        print(f"   ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π: {successful_recoveries}")
        print(f"   üìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: {vinted_scanner.current_system}")
        
        success = successful_recoveries == recovery_attempts
        
        self.test_results.append({
            "test": "sequential_recovery",
            "recovery_attempts": recovery_attempts,
            "successful_recoveries": successful_recoveries,
            "final_system": vinted_scanner.current_system,
            "success": success
        })
        
        return success
    
    def run_all_recovery_tests(self):
        """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"""
        print("üîÑ –¢–ï–°–¢–´ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø VINTED SCANNER")
        print("=" * 60)
        
        tests = [
            ("–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç", self.test_1_forced_switching_after_5_minutes),
            ("–°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–æ–≤ –ø—Ä–∏ 20+ –æ—à–∏–±–∫–∞—Ö", self.test_2_counter_reset_at_20_errors),
            ("–û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –∑–∞—Å—Ç—Ä–µ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã", self.test_3_system_stuck_detection),
            ("–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ Telegram", self.test_4_telegram_error_recovery),
            ("–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ –ø—Ä–æ–∫—Å–∏", self.test_5_proxy_failure_recovery),
            ("–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö", self.test_6_critical_error_recovery),
            ("–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ", self.test_7_sequential_recovery)
        ]
        
        successful_tests = 0
        total_tests = len(tests)
        
        for test_name, test_func in tests:
            try:
                print(f"\nüîÑ –ó–∞–ø—É—Å–∫: {test_name}")
                if test_func():
                    successful_tests += 1
                    print(f"   ‚úÖ {test_name}: –£–°–ü–ï–®–ù–û")
                else:
                    print(f"   ‚ùå {test_name}: –ü–†–û–í–ê–õ–ï–ù")
            except Exception as e:
                print(f"   ‚ö†Ô∏è {test_name}: –û–®–ò–ë–ö–ê - {str(e)}")
        
        # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        end_time = time.time()
        duration = end_time - self.start_time
        
        print(f"\nüìä –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–û–í –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø:")
        print(f"   ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: {successful_tests}/{total_tests}")
        print(f"   ‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: {total_tests - successful_tests}")
        print(f"   ‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {duration:.2f} —Å–µ–∫—É–Ω–¥")
        print(f"   üìä –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {(successful_tests/total_tests)*100:.1f}%")
        
        if successful_tests == total_tests:
            print(f"\nüéâ –í–°–ï –¢–ï–°–¢–´ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        else:
            print(f"\n‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø –ü–†–û–í–ê–õ–ï–ù–´!")
        
        return successful_tests == total_tests

def run_recovery_tests():
    """–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"""
    tester = RecoveryTestVintedScanner()
    return tester.run_all_recovery_tests()

if __name__ == "__main__":
    run_recovery_tests() 