#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–∫—Å–∏
"""

import sys
import time
import random
from datetime import datetime
sys.path.append('.')

import Config
from advanced_antiban import get_advanced_system

def test_smart_proxy_system():
    """–¢–µ—Å—Ç —É–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–∫—Å–∏"""
    print("üß™ –¢–ï–°–¢ –£–ú–ù–û–ô –°–ò–°–¢–ï–ú–´ –ü–†–û–ö–°–ò")
    print("=" * 50)
    print(f"üïê –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–∏—Å—Ç–µ–º—É
    system = get_advanced_system()
    
    print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø—Ä–æ–∫—Å–∏: {len(system.proxies)}")
    print(f"üß† –†–µ–∂–∏–º –ø—Ä–æ–∫—Å–∏: {system.proxy_mode}")
    print(f"üîß –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–æ–∫—Å–∏: {system._should_use_proxy()}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤
    test_params = [
        {
            'name': 'Prada',
            'params': {
                'page': '1', 'per_page': '2', 'search_text': '',
                'catalog_ids': '2050,1231,82', 'brand_ids': '3573',
                'order': 'newest_first', 'price_to': '80'
            }
        },
        {
            'name': 'bags',
            'params': {
                'page': '1', 'per_page': '2', 'search_text': '',
                'catalog_ids': '', 'brand_ids': '212366',
                'order': 'newest_first', 'price_to': '45'
            }
        }
    ]
    
    successful_tests = 0
    total_tests = 0
    
    for i, test_case in enumerate(test_params, 1):
        print(f"\n--- –¢–µ—Å—Ç {i}/{len(test_params)}: {test_case['name']} ---")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–∫—Å–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º
        print(f"üß† –†–µ–∂–∏–º –ø—Ä–æ–∫—Å–∏: {system.proxy_mode}")
        print(f"üîß –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–æ–∫—Å–∏: {system._should_use_proxy()}")
        if system.current_proxy:
            print(f"üì° –¢–µ–∫—É—â–∏–π –ø—Ä–æ–∫—Å–∏: {system.current_proxy['host']}:{system.current_proxy['port']}")
        
        start_time = time.time()
        url = f"{Config.vinted_url}/api/v2/catalog/items"
        
        try:
            result = system.make_http_request(url, test_case['params'])
            response_time = time.time() - start_time
            
            if result:
                items = result.get('items', [])
                print(f"‚úÖ –£–°–ü–ï–•: {len(items)} —Ç–æ–≤–∞—Ä–æ–≤ –∑–∞ {response_time:.2f}s")
                successful_tests += 1
                
                if items:
                    for j, item in enumerate(items[:2], 1):
                        title = item.get('title', 'N/A')
                        price = item.get('price', {})
                        amount = price.get('amount', 'N/A')
                        currency = price.get('currency_code', '')
                        print(f"   {j}. {title} - {amount} {currency}")
            else:
                print(f"‚ùå –û–®–ò–ë–ö–ê: –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ {response_time:.2f}s")
                
        except Exception as e:
            print(f"‚ùå –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï: {e}")
            
        total_tests += 1
        
        # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
        if i < len(test_params):
            delay = random.uniform(2, 4)
            print(f"‚è±Ô∏è –ü–∞—É–∑–∞ {delay:.1f}s...")
            time.sleep(delay)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    stats = system.get_stats()
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –£–ú–ù–û–ô –°–ò–°–¢–ï–ú–´ –ü–†–û–ö–°–ò:")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: {successful_tests}/{total_tests}")
    print(f"üìä –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {(successful_tests/total_tests*100):.1f}%" if total_tests > 0 else "üìä –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: 0%")
    print(f"üìä HTTP –∑–∞–ø—Ä–æ—Å—ã: {stats['http_success']}/{stats['http_requests']}")
    print(f"üìà –û–±—â–∞—è —É—Å–ø–µ—à–Ω–æ—Å—Ç—å: {stats['success_rate']:.1f}%")
    print(f"üì° –ü—Ä–æ–∫—Å–∏: {stats['proxies_count']} –∞–∫—Ç–∏–≤–Ω—ã—Ö")
    print(f"‚ö†Ô∏è –û—à–∏–±–æ–∫ –ø–æ–¥—Ä—è–¥: {stats['consecutive_errors']}")
    
    # –ù–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–∫—Å–∏
    print(f"\nüß† –£–ú–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ü–†–û–ö–°–ò:")
    print(f"üìä –†–µ–∂–∏–º –ø—Ä–æ–∫—Å–∏: {stats['proxy_mode']}")
    print(f"‚úÖ –£—Å–ø–µ—Ö–æ–≤ –ø—Ä–æ–∫—Å–∏: {stats['proxy_successes']}")
    print(f"‚ùå –û—à–∏–±–æ–∫ –ø—Ä–æ–∫—Å–∏: {stats['proxy_failures']}")
    print(f"üîß –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–æ–∫—Å–∏: {'–î–∞' if stats['should_use_proxy'] else '–ù–µ—Ç'}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–∫—Å–∏
    if stats.get('proxy_stats'):
        print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–†–û–ö–°–ò:")
        for proxy, proxy_stat in stats['proxy_stats'].items():
            if proxy_stat['requests'] > 0:
                print(f"   ‚Ä¢ {proxy}: {proxy_stat['success']}/{proxy_stat['requests']} ({proxy_stat['success_rate']:.1f}%)")
    
    print(f"\n‚úÖ –¢–ï–°–¢ –£–ú–ù–û–ô –°–ò–°–¢–ï–ú–´ –ü–†–û–ö–°–ò –ó–ê–í–ï–†–®–ï–ù!")
    print(f"üïê –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")

if __name__ == "__main__":
    test_smart_proxy_system() 