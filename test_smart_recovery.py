#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–º–Ω–æ–π —Å–∞–º–æ–≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—â–µ–π—Å—è —Å–∏—Å—Ç–µ–º—ã
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–≤ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∫—Å–∏
"""

import time
import logging
import requests
from advanced_antiban import get_advanced_system

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s"
)

def test_smart_recovery_system():
    """–¢–µ—Å—Ç —É–º–Ω–æ–π —Å–∞–º–æ–≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—â–µ–π—Å—è —Å–∏—Å—Ç–µ–º—ã"""
    print("üß† –¢–ï–°–¢ –£–ú–ù–û–ô –°–ê–ú–û–í–û–°–°–¢–ê–ù–ê–í–õ–ò–í–ê–Æ–©–ï–ô–°–Ø –°–ò–°–¢–ï–ú–´")
    print("=" * 60)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
    system = get_advanced_system()
    print(f"‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ (ID: {id(system)})")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = system.get_stats()
    print(f"\nüìä –ù–ê–ß–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"‚Ä¢ –ü—Ä–æ–∫—Å–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {stats['proxies_count']}")
    print(f"‚Ä¢ –†–µ–∂–∏–º –ø—Ä–æ–∫—Å–∏: {stats['proxy_mode']}")
    print(f"‚Ä¢ Whitelist: {stats['proxy_whitelist_count']}")
    print(f"‚Ä¢ Blacklist: {stats['proxy_blacklist_count']}")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤
    print(f"\nüîÑ –¢–ï–°–¢ 1: –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –†–ï–ñ–ò–ú–û–í")
    print("-" * 40)
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–∫—Å–∏
    print("üìä –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–∫—Å–∏...")
    for i in range(10):
        system.errors_403 += 1
        system.proxy_failures += 1
        time.sleep(0.1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∑–¥–æ—Ä–æ–≤—å—è
    system._periodic_proxy_health_check()
    
    stats = system.get_stats()
    print(f"‚Ä¢ –ù–æ–≤—ã–π —Ä–µ–∂–∏–º –ø—Ä–æ–∫—Å–∏: {stats['proxy_mode']}")
    print(f"‚Ä¢ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–π —Ä–µ–∂–∏–º–æ–≤: {stats['mode_switch_count']}")
    
    # –¢–µ—Å—Ç 2: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∫—Å–∏
    print(f"\nüîÑ –¢–ï–°–¢ 2: –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ü–†–û–ö–°–ò")
    print("-" * 40)
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —É—Å–ø–µ—Ö–∏ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–∫—Å–∏
    print("üìä –°–∏–º—É–ª–∏—Ä—É–µ–º —É—Å–ø–µ—Ö–∏ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–∫—Å–∏...")
    for i in range(5):
        system.http_success += 1
        system.proxy_successes += 1
        time.sleep(0.1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∑–¥–æ—Ä–æ–≤—å—è
    system._periodic_proxy_health_check()
    
    stats = system.get_stats()
    print(f"‚Ä¢ –ù–æ–≤—ã–π —Ä–µ–∂–∏–º –ø—Ä–æ–∫—Å–∏: {stats['proxy_mode']}")
    print(f"‚Ä¢ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–π —Ä–µ–∂–∏–º–æ–≤: {stats['mode_switch_count']}")
    
    # –¢–µ—Å—Ç 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Å–∏
    print(f"\nüîÑ –¢–ï–°–¢ 3: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–ö–°–ò")
    print("-" * 40)
    
    working_proxies = []
    failed_proxies = []
    
    for proxy in system.proxies[:5]:  # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 5 –ø—Ä–æ–∫—Å–∏
        if system._test_proxy(proxy):
            working_proxies.append(f"{proxy['host']}:{proxy['port']}")
            if proxy not in system.proxy_whitelist:
                system.proxy_whitelist.append(proxy)
        else:
            failed_proxies.append(f"{proxy['host']}:{proxy['port']}")
            if proxy not in system.proxy_blacklist:
                system.proxy_blacklist.append(proxy)
    
    print(f"‚úÖ –†–∞–±–æ—á–∏—Ö –ø—Ä–æ–∫—Å–∏: {len(working_proxies)}")
    print(f"‚ùå –ù–µ–∏—Å–ø—Ä–∞–≤–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏: {len(failed_proxies)}")
    
    if working_proxies:
        print("‚úÖ –†–ê–ë–û–ß–ò–ï –ü–†–û–ö–°–ò:")
        for proxy in working_proxies:
            print(f"‚Ä¢ {proxy}")
    
    # –¢–µ—Å—Ç 4: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–æ–∫—Å–∏
    print(f"\nüîÑ –¢–ï–°–¢ 4: –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–î–û–†–û–í–¨–Ø –ü–†–û–ö–°–ò")
    print("-" * 40)
    
    if system.proxies:
        test_proxy = system.proxies[0]
        print(f"üìä –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏: {test_proxy['host']}:{test_proxy['port']}")
        print(f"‚Ä¢ –ù–∞—á–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ: {test_proxy['health_score']}")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º —É—Å–ø–µ—Ö–∏
        for i in range(3):
            system._update_proxy_health(test_proxy, True)
            print(f"‚Ä¢ –ó–¥–æ—Ä–æ–≤—å–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—Ö–∞ {i+1}: {test_proxy['health_score']}")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
        for i in range(2):
            system._update_proxy_health(test_proxy, False)
            print(f"‚Ä¢ –ó–¥–æ—Ä–æ–≤—å–µ –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ {i+1}: {test_proxy['health_score']}")
    
    # –¢–µ—Å—Ç 5: –ü–æ–ø—ã—Ç–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    print(f"\nüîÑ –¢–ï–°–¢ 5: –ü–û–ü–´–¢–ö–ê –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø")
    print("-" * 40)
    
    system.proxy_mode = "disabled"
    system.proxy_recovery_attempts = 0
    
    print("üìä –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ø—ã—Ç–∫—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è...")
    system._attempt_proxy_recovery()
    
    stats = system.get_stats()
    print(f"‚Ä¢ –ü–æ–ø—ã—Ç–æ–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: {stats['proxy_recovery_attempts']}")
    print(f"‚Ä¢ Whitelist: {stats['proxy_whitelist_count']}")
    print(f"‚Ä¢ Blacklist: {stats['proxy_blacklist_count']}")
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print(f"\nüìä –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print("=" * 60)
    
    stats = system.get_stats()
    print(f"‚Ä¢ HTTP –∑–∞–ø—Ä–æ—Å—ã: {stats['http_success']}/{stats['http_requests']}")
    print(f"‚Ä¢ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {stats['success_rate']:.1f}%")
    print(f"‚Ä¢ –†–µ–∂–∏–º –ø—Ä–æ–∫—Å–∏: {stats['proxy_mode']}")
    print(f"‚Ä¢ Whitelist: {stats['proxy_whitelist_count']}")
    print(f"‚Ä¢ Blacklist: {stats['proxy_blacklist_count']}")
    print(f"‚Ä¢ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–π —Ä–µ–∂–∏–º–æ–≤: {stats['mode_switch_count']}")
    print(f"‚Ä¢ –ü–æ–ø—ã—Ç–æ–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: {stats['proxy_recovery_attempts']}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–∫—Å–∏ —Å –∑–¥–æ—Ä–æ–≤—å–µ–º
    print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–†–û–ö–°–ò:")
    for proxy, proxy_stat in stats['proxy_stats'].items():
        if proxy_stat['requests'] > 0:
            health_emoji = "üü¢" if proxy_stat['health_score'] >= 80 else "üü°" if proxy_stat['health_score'] >= 50 else "üî¥"
            print(f"{health_emoji} {proxy}: {proxy_stat['success']}/{proxy_stat['requests']} ({proxy_stat['success_rate']:.1f}%) [–ó–¥–æ—Ä–æ–≤—å–µ: {proxy_stat['health_score']}]")
    
    print(f"\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
    return system

def test_real_requests():
    """–¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É"""
    print(f"\nüåê –¢–ï–°–¢ –†–ï–ê–õ–¨–ù–´–• –ó–ê–ü–†–û–°–û–í")
    print("=" * 60)
    
    system = get_advanced_system()
    
    # –¢–µ—Å—Ç–æ–≤—ã–π URL
    test_url = "https://httpbin.org/ip"
    test_params = {}
    
    print(f"üìä –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫: {test_url}")
    
    # –î–µ–ª–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤
    for i in range(3):
        print(f"\nüîÑ –ó–∞–ø—Ä–æ—Å {i+1}/3:")
        
        try:
            result = system.make_http_request(test_url, test_params)
            if result:
                print(f"‚úÖ –£—Å–ø–µ—Ö! –û—Ç–≤–µ—Ç: {result}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞")
        except Exception as e:
            print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        
        time.sleep(2)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = system.get_stats()
    print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û–°–õ–ï –†–ï–ê–õ–¨–ù–´–• –ó–ê–ü–†–û–°–û–í:")
    print(f"‚Ä¢ HTTP –∑–∞–ø—Ä–æ—Å—ã: {stats['http_success']}/{stats['http_requests']}")
    print(f"‚Ä¢ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {stats['success_rate']:.1f}%")
    print(f"‚Ä¢ –†–µ–∂–∏–º –ø—Ä–æ–∫—Å–∏: {stats['proxy_mode']}")
    print(f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–æ–∫—Å–∏: {'–î–∞' if stats['should_use_proxy'] else '–ù–µ—Ç'}")

if __name__ == "__main__":
    try:
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã
        system = test_smart_recovery_system()
        
        # –¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        test_real_requests()
        
        print(f"\nüéâ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö: {e}")
        logging.error(f"–û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö: {e}") 