#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –±–∞–∑–æ–≤–æ–π –∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π —Å–∏—Å—Ç–µ–º
"""

import requests
import logging
import Config
from vinted_scanner import vinted_antiblock
from advanced_antiban import advanced_system

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def test_basic_system():
    """–¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("\nüîç –¢–ï–°–¢ –ë–ê–ó–û–í–û–ô –°–ò–°–¢–ï–ú–´:")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –±–∞–∑–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    basic_headers = vinted_antiblock.get_headers()
    print(f"üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –±–∞–∑–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã:")
    for key, value in basic_headers.items():
        print(f"   {key}: {value}")
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    url = f"{Config.vinted_url}/api/v2/catalog/items"
    params = {'page': '1', 'per_page': '2'}
    
    print(f"\nüåê URL: {url}")
    print(f"üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
    
    try:
        response = requests.get(url, params=params, headers=basic_headers, timeout=30)
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìã –û—Ç–≤–µ—Ç: {response.text[:200]}...")
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –£–°–ü–ï–•: –ù–∞–π–¥–µ–Ω–æ {len(data.get('items', []))} —Ç–æ–≤–∞—Ä–æ–≤")
            return True
        else:
            print(f"‚ùå –û–®–ò–ë–ö–ê: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï: {e}")
        return False

def test_advanced_system():
    """–¢–µ—Å—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("\nüöÄ –¢–ï–°–¢ –ü–†–û–î–í–ò–ù–£–¢–û–ô –°–ò–°–¢–ï–ú–´:")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã
    advanced_headers = advanced_system.get_random_headers()
    print(f"üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã:")
    for key, value in advanced_headers.items():
        print(f"   {key}: {value}")
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    url = f"{Config.vinted_url}/api/v2/catalog/items"
    params = {'page': '1', 'per_page': '2'}
    
    print(f"\nüåê URL: {url}")
    print(f"üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ—Å—Å–∏—é –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã
        response = advanced_system.session.get(
            url, 
            params=params, 
            headers=advanced_headers, 
            timeout=30
        )
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìã –û—Ç–≤–µ—Ç: {response.text[:200]}...")
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –£–°–ü–ï–•: –ù–∞–π–¥–µ–Ω–æ {len(data.get('items', []))} —Ç–æ–≤–∞—Ä–æ–≤")
            return True
        else:
            print(f"‚ùå –û–®–ò–ë–ö–ê: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï: {e}")
        return False

def test_direct_comparison():
    """–ü—Ä—è–º–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤"""
    print("\n‚öñÔ∏è –ü–†–Ø–ú–û–ï –°–†–ê–í–ù–ï–ù–ò–ï:")
    print("=" * 50)
    
    url = f"{Config.vinted_url}/api/v2/catalog/items"
    params = {'page': '1', 'per_page': '2'}
    
    # –ë–∞–∑–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞
    basic_headers = vinted_antiblock.get_headers()
    basic_response = requests.get(url, params=params, headers=basic_headers, timeout=30)
    
    # –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞  
    advanced_headers = advanced_system.get_random_headers()
    advanced_response = advanced_system.session.get(url, params=params, headers=advanced_headers, timeout=30)
    
    print(f"üìä –ë–∞–∑–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞: {basic_response.status_code}")
    print(f"üìä –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞: {advanced_response.status_code}")
    
    print(f"\nüìã –†–∞–∑–ª–∏—á–∏—è –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö:")
    basic_keys = set(basic_headers.keys())
    advanced_keys = set(advanced_headers.keys())
    
    print(f"   –¢–æ–ª—å–∫–æ –≤ –±–∞–∑–æ–≤–æ–π: {basic_keys - advanced_keys}")
    print(f"   –¢–æ–ª—å–∫–æ –≤ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π: {advanced_keys - basic_keys}")
    print(f"   –û–±—â–∏–µ: {basic_keys & advanced_keys}")
    
    # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –æ–±—â–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
    for key in basic_keys & advanced_keys:
        if basic_headers[key] != advanced_headers[key]:
            print(f"   üîÑ {key}:")
            print(f"      –ë–∞–∑–æ–≤–∞—è: {basic_headers[key]}")
            print(f"      –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è: {advanced_headers[key]}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú –ê–ù–¢–ò–ë–ê–ù–ê")
    print("=" * 60)
    
    # –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    basic_success = test_basic_system()
    
    # –¢–µ—Å—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã
    advanced_success = test_advanced_system()
    
    # –ü—Ä—è–º–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
    test_direct_comparison()
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print("=" * 30)
    print(f"‚úÖ –ë–∞–∑–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞: {'–†–ê–ë–û–¢–ê–ï–¢' if basic_success else '–ù–ï –†–ê–ë–û–¢–ê–ï–¢'}")
    print(f"üöÄ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞: {'–†–ê–ë–û–¢–ê–ï–¢' if advanced_success else '–ù–ï –†–ê–ë–û–¢–ê–ï–¢'}")
    
    if basic_success and not advanced_success:
        print("\nüîç –í–´–í–û–î: –ë–∞–∑–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è")
        print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   - –†–∞–∑–Ω—ã–µ User-Agent")
        print("   - –†–∞–∑–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏")
        print("   - –†–∞–∑–Ω—ã–µ —Å–µ—Å—Å–∏–∏")
        print("   - Vinted –¥–µ—Ç–µ–∫—Ç–∏—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é —Å–∏—Å—Ç–µ–º—É")

if __name__ == "__main__":
    main() 