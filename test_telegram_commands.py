#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥ Telegram –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import asyncio
import Config
from vinted_scanner import reservation_system, unified_reserve_command, reservation_status_command

class MockUpdate:
    """–ú–æ–∫ –æ–±—ä–µ–∫—Ç –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ Update"""
    def __init__(self, text="", args=None, reply_to_message=None):
        self.message = MockMessage(text, args, reply_to_message)

class MockMessage:
    """–ú–æ–∫ –æ–±—ä–µ–∫—Ç –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ Message"""
    def __init__(self, text, args=None, reply_to_message=None):
        self.text = text
        self.chat_id = -1002742804558  # –¢–µ—Å—Ç–æ–≤—ã–π chat_id
        self.reply_to_message = reply_to_message
    
    async def reply_text(self, text, parse_mode=None):
        """–ú–æ–∫ –º–µ—Ç–æ–¥ –¥–ª—è reply_text"""
        print(f"  üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {text[:50]}...")
        return True

class MockContext:
    """–ú–æ–∫ –æ–±—ä–µ–∫—Ç –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ Context"""
    def __init__(self, args=None):
        self.args = args or []

async def test_reserve_command():
    """–¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥—ã —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥—ã /reserve")
    print("=" * 40)
    
    # –¢–µ—Å—Ç 1: –†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ —Å—Å—ã–ª–∫–µ
    print("\nüìã –¢–µ—Å—Ç 1: –†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ —Å—Å—ã–ª–∫–µ")
    update = MockUpdate("/reserve", ["https://www.vinted.de/items/test-item-123"])
    context = MockContext(["https://www.vinted.de/items/test-item-123"])
    
    try:
        await unified_reserve_command(update, context)
        print("  ‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {str(e)[:50]}")
    
    # –¢–µ—Å—Ç 2: –†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ reply
    print("\nüìã –¢–µ—Å—Ç 2: –†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ reply")
    reply_message = MockMessage("–í–æ—Ç —Ç–æ–≤–∞—Ä: https://www.vinted.de/items/test-item-456")
    update = MockUpdate("/reserve", reply_to_message=reply_message)
    context = MockContext()
    
    try:
        await unified_reserve_command(update, context)
        print("  ‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {str(e)[:50]}")
    
    # –¢–µ—Å—Ç 3: –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞
    print("\nüìã –¢–µ—Å—Ç 3: –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞")
    update = MockUpdate("/reserve", ["https://example.com/wrong-link"])
    context = MockContext(["https://example.com/wrong-link"])
    
    try:
        await unified_reserve_command(update, context)
        print("  ‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {str(e)[:50]}")

async def test_reservations_command():
    """–¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–π"""
    print("\nüß™ –¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥—ã /reservations")
    print("=" * 40)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è
    test_items = [
        {
            "url": f"{Config.vinted_url}/items/test-item-1",
            "title": "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä 1"
        },
        {
            "url": f"{Config.vinted_url}/items/test-item-2",
            "title": "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä 2"
        }
    ]
    
    for item in test_items:
        item_id = item["url"].split('/')[-1]
        reservation_system.reserved_items[item_id] = {
            "url": item["url"],
            "title": item["title"],
            "reserved_at": asyncio.get_event_loop().time(),
            "paypal_url": f"{Config.vinted_url}/checkout/{item_id}/paypal"
        }
    
    update = MockUpdate("/reservations")
    context = MockContext()
    
    try:
        await reservation_status_command(update, context)
        print("  ‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {str(e)[:50]}")

async def test_reservation_system():
    """–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print(f"\nüìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    print(f"  –†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ: {Config.reservation_enabled}")
    print(f"  –¢–∞–π–º–∞—É—Ç: {Config.reservation_timeout} —Å–µ–∫")
    print(f"  –ú–∞–∫—Å–∏–º—É–º —Ç–æ–≤–∞—Ä–æ–≤: {Config.reservation_max_items}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    await test_reserve_command()
    await test_reservations_command()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
    print(f"\nüìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:")
    print(f"  –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–π: {len(reservation_system.reserved_items)}")
    print(f"  –°–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞: {reservation_system is not None}")
    
    print(f"\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(test_reservation_system()) 