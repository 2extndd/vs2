#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_updated_commands():
    """–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"""
    print("üéØ –¢–ï–°–¢ –û–ë–ù–û–í–õ–ï–ù–ù–´–• –ö–û–ú–ê–ù–î –ë–û–¢–ê")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã
    try:
        from advanced_antiban import get_advanced_system
        advanced_system = get_advanced_system()
        print("‚úÖ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞")
    except ImportError as e:
        print(f"‚ùå –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {e}")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ–º–∞–Ω–¥
    commands_to_test = [
        "status_command",
        "log_command", 
        "restart_command",
        "fast_command",
        "slow_command",
        "recovery_command",
        "proxy_command"
    ]
    
    print(f"\nüìã –ü–†–û–í–ï–†–ö–ê –ö–û–ú–ê–ù–î:")
    print("-" * 40)
    
    found_commands = 0
    for command in commands_to_test:
        try:
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ vinted_scanner
            import vinted_scanner
            if hasattr(vinted_scanner, command):
                print(f"‚úÖ {command} - –Ω–∞–π–¥–µ–Ω–∞")
                found_commands += 1
            else:
                print(f"‚ùå {command} - –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        except Exception as e:
            print(f"‚ùå {command} - –æ—à–∏–±–∫–∞: {e}")
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–æ–º–∞–Ω–¥: {found_commands}")
    print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–º–∞–Ω–¥: {len(commands_to_test) - found_commands}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥ –≤ setup_bot
    print(f"\nüîß –ü–†–û–í–ï–†–ö–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –ö–û–ú–ê–ù–î:")
    print("-" * 40)
    
    try:
        import vinted_scanner
        setup_bot_source = vinted_scanner.setup_bot.__code__.co_consts
        
        # –ò—â–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        registered_commands = []
        for const in setup_bot_source:
            if isinstance(const, str) and const.startswith('/'):
                registered_commands.append(const)
        
        print(f"üìã –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–ù–ù–´–ï –ö–û–ú–ê–ù–î–´:")
        for cmd in registered_commands:
            print(f"‚Ä¢ {cmd}")
            
        print(f"\nüìä –ò–¢–û–ì–û –ö–û–ú–ê–ù–î: {len(registered_commands)}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã
    print(f"\nüß† –ü–†–û–í–ï–†–ö–ê –ü–†–û–î–í–ò–ù–£–¢–û–ô –°–ò–°–¢–ï–ú–´:")
    print("-" * 40)
    
    try:
        stats = advanced_system.get_stats()
        print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        print(f"üìä HTTP –∑–∞–ø—Ä–æ—Å—ã: {stats.get('http_success', 0)}/{stats.get('http_requests', 0)}")
        print(f"üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {stats.get('success_rate', 0):.1f}%")
        print(f"üì° –ü—Ä–æ–∫—Å–∏: {stats.get('proxies_count', 0)} –∞–∫—Ç–∏–≤–Ω—ã—Ö")
        print(f"üîÑ –†–µ–∂–∏–º: {stats.get('proxy_mode', 'unknown')}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
    
    print(f"\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")

if __name__ == "__main__":
    test_updated_commands() 